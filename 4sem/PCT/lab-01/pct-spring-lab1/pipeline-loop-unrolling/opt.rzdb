/
type=rizin rz-db project
version=11

/core
blocksize=0x400
offset=0x11f8

/core/analysis

/core/analysis/blocks
0x1000={"size":20,"jump":4118,"fail":4116,"traced":true,"ninstr":5,"op_pos":[4,8,15,18],"sp_delta":[0,8,8,8,8],"sp":0}
0x1014={"size":2,"jump":4118,"ninstr":1,"sp":8}
0x1016={"size":5,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[-8,-16],"sp":8}
0x1080={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x1090={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x10a0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x10b0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x10c0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x10d0={"size":11,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x10e0={"size":20,"traced":true,"ninstr":7,"op_pos":[4,8,15,20,22,26],"sp_delta":[0,8,8,8,8,0,-8],"sp":0}
0x1100={"size":37,"traced":true,"ninstr":12,"op_pos":[4,6,9,10,13,17,18,19,22,24,31],"sp_delta":[0,0,0,-8,-8,-8,0,8,8,8,8,8],"sp":0}
0x1130={"size":19,"jump":4440,"fail":4419,"traced":true,"ninstr":4,"op_pos":[7,14,17],"sp_delta":[0,0,0,0],"sp":0}
0x1143={"size":12,"jump":4440,"fail":4431,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":0}
0x114f={"size":2,"ninstr":1,"sp":0}
0x1158={"size":1,"ninstr":1,"sp":0}
0x1160={"size":36,"jump":4504,"fail":4484,"traced":true,"ninstr":9,"op_pos":[7,14,17,20,24,28,31,34],"sp_delta":[0,0,0,0,0,0,0,0,0],"sp":0}
0x1184={"size":12,"jump":4504,"fail":4496,"traced":true,"ninstr":3,"op_pos":[7,10],"sp_delta":[0,0,0],"sp":0}
0x1190={"size":2,"ninstr":1,"sp":0}
0x1198={"size":1,"ninstr":1,"sp":0}
0x11a0={"size":13,"jump":4568,"fail":4525,"traced":true,"ninstr":3,"op_pos":[4,11],"sp_delta":[0,0,0],"sp":0}
0x11ad={"size":14,"jump":4551,"fail":4539,"traced":true,"ninstr":4,"op_pos":[1,9,12],"sp_delta":[8,8,8,8],"sp":0}
0x11bb={"size":12,"jump":4551,"traced":true,"ninstr":2,"op_pos":[7],"sp_delta":[0,0],"sp":8}
0x11c7={"size":14,"traced":true,"ninstr":4,"op_pos":[5,12,13],"sp_delta":[0,0,-8,-16],"sp":8}
0x11d8={"size":1,"ninstr":1,"sp":0}
0x11e0={"size":9,"jump":4448,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[0,0],"sp":0}
0x11f0={"size":8,"jump":4632,"fail":4600,"traced":true,"ninstr":3,"op_pos":[4,6],"sp_delta":[0,0,0],"sp":0}
0x11f8={"size":16,"jump":4616,"traced":true,"ninstr":4,"op_pos":[3,8,10],"sp_delta":[0,0,0,0],"sp":0}
0x1208={"size":11,"jump":4616,"fail":4627,"traced":true,"ninstr":4,"op_pos":[2,6,9],"sp_delta":[0,0,0,0],"sp":0}
0x1213={"size":1,"ninstr":1,"sp":0}
0x1218={"size":3,"traced":true,"ninstr":2,"op_pos":[2],"sp_delta":[0,-8],"sp":0}
0x1220={"size":86,"jump":4731,"fail":4726,"traced":true,"ninstr":17,"op_pos":[4,8,13,22,27,29,32,37,41,45,52,60,66,70,75,84],"sp_delta":[0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40],"sp":0}
0x1276={"size":5,"traced":true,"ninstr":2,"op_pos":[4],"sp_delta":[-40,-48],"sp":40}
0x127b={"size":5,"ninstr":1,"sp":40}
0x1280={"size":14,"jump":4848,"fail":4750,"traced":true,"ninstr":5,"op_pos":[4,7,9,12],"sp_delta":[0,0,0,0,0],"sp":0,"cmpval":3}
0x128e={"size":26,"jump":4776,"traced":true,"ninstr":8,"op_pos":[3,6,8,11,15,20,22],"sp_delta":[0,0,0,0,0,0,0,0],"sp":0}
0x12a8={"size":20,"jump":4776,"fail":4796,"traced":true,"ninstr":7,"op_pos":[2,6,9,12,15,18],"sp_delta":[0,0,0,0,0,0,0],"sp":0}
0x12bc={"size":6,"jump":4802,"traced":true,"ninstr":2,"op_pos":[3],"sp_delta":[0,0],"sp":0}
0x12c2={"size":4,"jump":4843,"fail":4806,"traced":true,"ninstr":2,"op_pos":[2],"sp_delta":[0,0],"sp":0}
0x12c6={"size":26,"jump":4832,"traced":true,"ninstr":7,"op_pos":[3,5,7,11,14,19],"sp_delta":[0,0,0,0,0,0,0],"sp":0}
0x12e0={"size":11,"jump":4832,"fail":4843,"traced":true,"ninstr":4,"op_pos":[2,6,9],"sp_delta":[0,0,0,0],"sp":0}
0x12eb={"size":1,"ninstr":1,"sp":0}
0x12f0={"size":6,"jump":4802,"traced":true,"ninstr":3,"op_pos":[2,4],"sp_delta":[0,0,0],"sp":0}
0x1300={"size":15,"jump":4992,"fail":4879,"traced":true,"ninstr":5,"op_pos":[4,7,10,13],"sp_delta":[0,0,0,0,0],"sp":0,"cmpval":3}
0x130f={"size":33,"jump":4912,"traced":true,"ninstr":11,"op_pos":[4,7,9,11,14,17,21,26,28,30],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0],"sp":0}
0x1330={"size":20,"jump":4912,"fail":4932,"traced":true,"ninstr":7,"op_pos":[2,5,9,12,15,18],"sp_delta":[0,0,0,0,0,0,0],"sp":0}
0x1344={"size":12,"jump":4944,"traced":true,"ninstr":4,"op_pos":[4,6,10],"sp_delta":[0,0,0,0],"sp":0}
0x1350={"size":5,"jump":4987,"fail":4949,"traced":true,"ninstr":2,"op_pos":[3],"sp_delta":[0,0],"sp":0}
0x1355={"size":27,"jump":4976,"traced":true,"ninstr":7,"op_pos":[4,7,10,14,17,22],"sp_delta":[0,0,0,0,0,0,0],"sp":0}
0x1370={"size":11,"jump":4976,"fail":4987,"traced":true,"ninstr":4,"op_pos":[2,6,9],"sp_delta":[0,0,0,0],"sp":0}
0x137b={"size":3,"traced":true,"ninstr":2,"op_pos":[2],"sp_delta":[0,-8],"sp":0}
0x1380={"size":9,"jump":4944,"traced":true,"ninstr":4,"op_pos":[2,4,7],"sp_delta":[0,0,0,0],"sp":0}
0x1390={"size":56,"jump":5064,"traced":true,"ninstr":14,"op_pos":[4,6,8,11,16,17,21,30,35,37,42,45,52],"sp_delta":[0,8,16,16,16,24,72,72,72,72,72,72,72,72],"sp":0}
0x13c8={"size":15,"jump":5064,"fail":5079,"traced":true,"ninstr":4,"op_pos":[6,10,13],"sp_delta":[0,0,0,0],"sp":72}
0x13d7={"size":166,"jump":5262,"fail":5245,"traced":true,"ninstr":33,"op_pos":[5,10,13,18,22,26,29,36,44,49,56,60,66,69,72,77,80,85,89,93,96,103,108,113,121,128,135,139,145,150,155,164],"sp_delta":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sp":72}
0x147d={"size":17,"jump":4240,"traced":true,"ninstr":6,"op_pos":[4,7,8,10,12],"sp_delta":[-48,-48,-56,-64,-72,-72],"sp":72}
0x148e={"size":5,"ninstr":1,"sp":72}
0x1494={"size":13,"traced":true,"ninstr":4,"op_pos":[4,8,12],"sp_delta":[0,8,0,-8],"sp":0}

/core/analysis/callables
_Exit=func
__assert_fail=func
__bzero=func
__cxa_throw=func
__error=func
__libc_init=func
__libc_init_array=func
__libc_start_main=func
__maskrune=func
__stack_chk_fail=func
__tolower=func
__toupper=func
__uClibc_main=func
_exit=func
abort=func
abs=func
access=func
acos=func
acosf=func
acosh=func
acoshf=func
acoshl=func
acosl=func
aligned_alloc=func
arc4random=func
asctime=func
asin=func
asinf=func
asinh=func
asinhf=func
asinhl=func
asinl=func
at_quick_exit=func
atan=func
atan2=func
atan2f=func
atan2l=func
atanf=func
atanh=func
atanhf=func
atanhl=func
atanl=func
atexit=func
atof=func
atoi=func
atol=func
atoll=func
basename=func
bind=func
bindtextdomain=func
bsearch=func
btowc=func
bzero=func
calloc=func
cbrt=func
cbrtf=func
cbrtl=func
ceil=func
ceilf=func
ceill=func
chmod=func
clearerr=func
clock=func
close=func
compat_mode=func
connect=func
copysign=func
copysignf=func
copysignl=func
cos=func
cosf=func
cosh=func
coshf=func
coshl=func
cosl=func
ctime=func
difftime=func
div=func
entry.init0=func
entry0=func
erf=func
erfc=func
erfcf=func
erfcl=func
erff=func
erfl=func
err=func
errc=func
error=func
errx=func
exit=func
exp=func
exp2=func
exp2f=func
exp2l=func
expf=func
expl=func
expm1=func
expm1f=func
expm1l=func
fabs=func
fabsf=func
fabsl=func
fchmod=func
fclose=func
fdim=func
fdimf=func
fdiml=func
feclearexcept=func
fegetenv=func
fegetexceptflag=func
fegetround=func
feholdexcept=func
feof=func
feraiseexcept=func
ferror=func
fesetenv=func
fesetexceptflag=func
fesetround=func
fetestexcept=func
feupdateenv=func
fflush=func
fgetc=func
fgetpos=func
fgets=func
fgetwc=func
fgetws=func
fileno=func
floor=func
floorf=func
floorl=func
fma=func
fmaf=func
fmal=func
fmax=func
fmaxf=func
fmaxl=func
fmin=func
fminf=func
fminl=func
fmod=func
fmodf=func
fmodl=func
fopen=func
fpclassify=func
fprintf=func
fputc=func
fputs=func
fputwc=func
fputws=func
fread=func
free=func
freopen=func
frexp=func
frexpf=func
frexpl=func
fscanf=func
fseek=func
fsetpos=func
fstat=func
ftell=func
fts_children_INODE64=func
fts_close_INODE64=func
fts_open_INODE64=func
fts_read_INODE64=func
fts_set_INODE64=func
func._Exit.arg.0=int,status
func._Exit.args=0x1
func._Exit.noreturn=true
func._Exit.ret=void
func.__assert_fail.arg.0=const char *,function
func.__assert_fail.args=0x4
func.__assert_fail.noreturn=true
func.__assert_fail.ret=void
func.__bzero.arg.0=size_t,n
func.__bzero.args=0x2
func.__bzero.ret=void
func.__cxa_throw.arg.0=void *,dest
func.__cxa_throw.args=0x3
func.__cxa_throw.noreturn=true
func.__cxa_throw.ret=void
func.__error.arg.0=char *,format
func.__error.args=0x3
func.__error.ret=void
func.__libc_init.arg.0=char **,envp
func.__libc_init.args=0x3
func.__libc_init.noreturn=true
func.__libc_init.ret=void
func.__libc_init_array.args=0
func.__libc_init_array.ret=void
func.__libc_start_main.arg.0=void *,stack_end
func.__libc_start_main.args=0x7
func.__libc_start_main.noreturn=true
func.__libc_start_main.ret=int
func.__maskrune.arg.0=long,f
func.__maskrune.args=0x2
func.__maskrune.ret=int
func.__stack_chk_fail.args=0
func.__stack_chk_fail.noreturn=true
func.__stack_chk_fail.ret=void
func.__tolower.arg.0=int,c
func.__tolower.args=0x1
func.__tolower.ret=int
func.__toupper.arg.0=int,c
func.__toupper.args=0x1
func.__toupper.ret=int
func.__uClibc_main.arg.0=void *,stack_end
func.__uClibc_main.args=0x7
func.__uClibc_main.noreturn=true
func.__uClibc_main.ret=int
func._exit.arg.0=int,status
func._exit.args=0x1
func._exit.noreturn=true
func._exit.ret=void
func.abort.args=0
func.abort.noreturn=true
func.abort.ret=void
func.abs.arg.0=int,j
func.abs.args=0x1
func.abs.ret=int
func.access.arg.0=enum access_perm,mode
func.access.args=0x2
func.access.ret=int
func.acos.arg.0=double,x
func.acos.args=0x1
func.acos.ret=double
func.acosf.arg.0=float,x
func.acosf.args=0x1
func.acosf.ret=float
func.acosh.arg.0=double,x
func.acosh.args=0x1
func.acosh.ret=double
func.acoshf.arg.0=float,x
func.acoshf.args=0x1
func.acoshf.ret=float
func.acoshl.arg.0=long double,x
func.acoshl.args=0x1
func.acoshl.ret=long double
func.acosl.arg.0=long double,x
func.acosl.args=0x1
func.acosl.ret=long double
func.aligned_alloc.arg.0=size_t,size
func.aligned_alloc.args=0x2
func.aligned_alloc.ret=void
func.arc4random.args=0
func.arc4random.ret=uint32_t
func.asctime.arg.0=struct tm *,timeptr
func.asctime.args=0x1
func.asctime.ret=char *
func.asin.arg.0=double,x
func.asin.args=0x1
func.asin.ret=double
func.asinf.arg.0=float,x
func.asinf.args=0x1
func.asinf.ret=float
func.asinh.arg.0=double,x
func.asinh.args=0x1
func.asinh.ret=double
func.asinhf.arg.0=float,x
func.asinhf.args=0x1
func.asinhf.ret=float
func.asinhl.arg.0=long double,x
func.asinhl.args=0x1
func.asinhl.ret=long double
func.asinl.arg.0=long double,x
func.asinl.args=0x1
func.asinl.ret=long double
func.at_quick_exit.args=0
func.at_quick_exit.ret=int
func.atan.arg.0=double,x
func.atan.args=0x1
func.atan.ret=double
func.atan2.arg.0=double,x
func.atan2.args=0x2
func.atan2.ret=double
func.atan2f.arg.0=float,x
func.atan2f.args=0x2
func.atan2f.ret=float
func.atan2l.arg.0=long double,x
func.atan2l.args=0x2
func.atan2l.ret=long double
func.atanf.arg.0=float,x
func.atanf.args=0x1
func.atanf.ret=float
func.atanh.arg.0=double,x
func.atanh.args=0x1
func.atanh.ret=double
func.atanhf.arg.0=float,x
func.atanhf.args=0x1
func.atanhf.ret=float
func.atanhl.arg.0=long double,x
func.atanhl.args=0x1
func.atanhl.ret=long double
func.atanl.arg.0=long double,x
func.atanl.args=0x1
func.atanl.ret=long double
func.atexit.arg.0=void *,function
func.atexit.args=0x1
func.atexit.ret=int
func.atof.arg.0=const char *,str
func.atof.args=0x1
func.atof.ret=double
func.atoi.arg.0=const char *,str
func.atoi.args=0x1
func.atoi.ret=int
func.atol.arg.0=const char *,str
func.atol.args=0x1
func.atol.ret=long
func.atoll.arg.0=const char *,str
func.atoll.args=0x1
func.atoll.ret=long long
func.basename.arg.0=char *,path
func.basename.args=0x1
func.basename.ret=char *
func.bind.arg.0=socklen_t,address_len
func.bind.args=0x3
func.bind.ret=int
func.bindtextdomain.arg.0=char *,dirname
func.bindtextdomain.args=0x2
func.bindtextdomain.ret=char *
func.bsearch.arg.0=void *,compar
func.bsearch.args=0x5
func.bsearch.ret=void *
func.btowc.arg.0=int,c
func.btowc.args=0x1
func.btowc.ret=wint_t
func.bzero.arg.0=size_t,n
func.bzero.args=0x2
func.bzero.ret=void
func.calloc.arg.0=size_t,size
func.calloc.args=0x2
func.calloc.ret=void *
func.cbrt.arg.0=double,x
func.cbrt.args=0x1
func.cbrt.ret=double
func.cbrtf.arg.0=float,x
func.cbrtf.args=0x1
func.cbrtf.ret=float
func.cbrtl.arg.0=long double,x
func.cbrtl.args=0x1
func.cbrtl.ret=long double
func.ceil.arg.0=double,x
func.ceil.args=0x1
func.ceil.ret=double
func.ceilf.arg.0=float,x
func.ceilf.args=0x1
func.ceilf.ret=float
func.ceill.arg.0=long double,x
func.ceill.args=0x1
func.ceill.ret=long double
func.chmod.arg.0=int,mode
func.chmod.args=0x2
func.chmod.ret=int
func.clearerr.arg.0=FILE *,stream
func.clearerr.args=0x1
func.clearerr.ret=void
func.clock.args=0
func.clock.ret=clock_t
func.close.arg.0=int,fildes
func.close.args=0x1
func.close.ret=int
func.compat_mode.arg.0=const char *,mode
func.compat_mode.args=0x2
func.compat_mode.ret=bool
func.connect.arg.0=size_t,addrlen
func.connect.args=0x3
func.connect.ret=ssize_t
func.copysign.arg.0=double,y
func.copysign.args=0x2
func.copysign.ret=double
func.copysignf.arg.0=float,y
func.copysignf.args=0x2
func.copysignf.ret=float
func.copysignl.arg.0=long double,y
func.copysignl.args=0x2
func.copysignl.ret=long double
func.cos.arg.0=double,x
func.cos.args=0x1
func.cos.ret=double
func.cosf.arg.0=float,x
func.cosf.args=0x1
func.cosf.ret=float
func.cosh.arg.0=double,x
func.cosh.args=0x1
func.cosh.ret=double
func.coshf.arg.0=float,x
func.coshf.args=0x1
func.coshf.ret=float
func.coshl.arg.0=long double,x
func.coshl.args=0x1
func.coshl.ret=long double
func.cosl.arg.0=long double,x
func.cosl.args=0x1
func.cosl.ret=long double
func.ctime.arg.0=time_t *,timer
func.ctime.args=0x1
func.ctime.ret=char *
func.difftime.arg.0=time_t,time0
func.difftime.args=0x2
func.difftime.ret=double
func.div.arg.0=int,denom
func.div.args=0x2
func.div.ret=div_t
func.entry.init0.args=0
func.entry0.arg.0=void *,rtld_fini
func.entry0.args=0x1
func.erf.arg.0=double,x
func.erf.args=0x1
func.erf.ret=double
func.erfc.arg.0=double,x
func.erfc.args=0x1
func.erfc.ret=double
func.erfcf.arg.0=float,x
func.erfcf.args=0x1
func.erfcf.ret=float
func.erfcl.arg.0=long double,x
func.erfcl.args=0x1
func.erfcl.ret=long double
func.erff.arg.0=float,x
func.erff.args=0x1
func.erff.ret=float
func.erfl.arg.0=long double,x
func.erfl.args=0x1
func.erfl.ret=long double
func.err.arg.0=int,eval
func.err.args=0x1
func.err.noreturn=true
func.err.ret=void
func.errc.arg.0=int,eval
func.errc.args=0x1
func.errc.noreturn=true
func.errc.ret=void
func.error.arg.0=char *,format
func.error.args=0x3
func.error.ret=void
func.errx.arg.0=int,eval
func.errx.args=0x1
func.errx.noreturn=true
func.errx.ret=void
func.exit.arg.0=int,status
func.exit.args=0x1
func.exit.noreturn=true
func.exit.ret=void
func.exp.arg.0=double,x
func.exp.args=0x1
func.exp.ret=double
func.exp2.arg.0=double,x
func.exp2.args=0x1
func.exp2.ret=double
func.exp2f.arg.0=float,x
func.exp2f.args=0x1
func.exp2f.ret=float
func.exp2l.arg.0=long double,x
func.exp2l.args=0x1
func.exp2l.ret=long double
func.expf.arg.0=float,x
func.expf.args=0x1
func.expf.ret=float
func.expl.arg.0=long double,x
func.expl.args=0x1
func.expl.ret=long double
func.expm1.arg.0=double,x
func.expm1.args=0x1
func.expm1.ret=double
func.expm1f.arg.0=float,x
func.expm1f.args=0x1
func.expm1f.ret=float
func.expm1l.arg.0=long double,x
func.expm1l.args=0x1
func.expm1l.ret=long double
func.fabs.arg.0=double,x
func.fabs.args=0x1
func.fabs.ret=double
func.fabsf.arg.0=float,x
func.fabsf.args=0x1
func.fabsf.ret=float
func.fabsl.arg.0=long double,x
func.fabsl.args=0x1
func.fabsl.ret=long double
func.fchmod.arg.0=int,mode
func.fchmod.args=0x2
func.fchmod.ret=int
func.fclose.arg.0=FILE *,stream
func.fclose.args=0x1
func.fclose.ret=int
func.fdim.arg.0=double,y
func.fdim.args=0x2
func.fdim.ret=double
func.fdimf.arg.0=float,y
func.fdimf.args=0x2
func.fdimf.ret=float
func.fdiml.arg.0=long double,y
func.fdiml.args=0x2
func.fdiml.ret=long double
func.feclearexcept.arg.0=int,excepts
func.feclearexcept.args=0x1
func.feclearexcept.ret=int
func.fegetenv.arg.0=fenv_t *,envp
func.fegetenv.args=0x1
func.fegetenv.ret=int
func.fegetexceptflag.arg.0=int,excepts
func.fegetexceptflag.args=0x2
func.fegetexceptflag.ret=int
func.fegetround.args=0
func.fegetround.ret=int
func.feholdexcept.arg.0=fenv_t *,envp
func.feholdexcept.args=0x1
func.feholdexcept.ret=int
func.feof.arg.0=FILE *,stream
func.feof.args=0x1
func.feof.ret=int
func.feraiseexcept.arg.0=int,excepts
func.feraiseexcept.args=0x1
func.feraiseexcept.ret=int
func.ferror.arg.0=FILE *,stream
func.ferror.args=0x1
func.ferror.ret=int
func.fesetenv.arg.0=fenv_t *,arg
func.fesetenv.args=0x1
func.fesetenv.ret=int
func.fesetexceptflag.arg.0=int,excepts
func.fesetexceptflag.args=0x2
func.fesetexceptflag.ret=int
func.fesetround.arg.0=int,round
func.fesetround.args=0x1
func.fesetround.ret=int
func.fetestexcept.arg.0=int,excepts
func.fetestexcept.args=0x1
func.fetestexcept.ret=int
func.feupdateenv.arg.0=fenv_t *,arg
func.feupdateenv.args=0x1
func.feupdateenv.ret=int
func.fflush.arg.0=FILE *,stream
func.fflush.args=0x1
func.fflush.ret=int
func.fgetc.arg.0=FILE *,stream
func.fgetc.args=0x1
func.fgetc.ret=int
func.fgetpos.arg.0=fpos_t *,pos
func.fgetpos.args=0x2
func.fgetpos.ret=int
func.fgets.arg.0=FILE *,stream
func.fgets.args=0x3
func.fgets.ret=char *
func.fgetwc.arg.0=FILE *,stream
func.fgetwc.args=0x1
func.fgetwc.ret=wint_t
func.fgetws.arg.0=FILE *,stream
func.fgetws.args=0x3
func.fgetws.ret=wchar_t *
func.fileno.arg.0=FILE *,stream
func.fileno.args=0x1
func.fileno.ret=int
func.floor.arg.0=double,x
func.floor.args=0x1
func.floor.ret=double
func.floorf.arg.0=float,x
func.floorf.args=0x1
func.floorf.ret=float
func.floorl.arg.0=long double,x
func.floorl.args=0x1
func.floorl.ret=long double
func.fma.arg.0=double,z
func.fma.args=0x3
func.fma.ret=double
func.fmaf.arg.0=float,z
func.fmaf.args=0x3
func.fmaf.ret=float
func.fmal.arg.0=long double,z
func.fmal.args=0x3
func.fmal.ret=long double
func.fmax.arg.0=double,y
func.fmax.args=0x2
func.fmax.ret=double
func.fmaxf.arg.0=float,y
func.fmaxf.args=0x2
func.fmaxf.ret=float
func.fmaxl.arg.0=long double,y
func.fmaxl.args=0x2
func.fmaxl.ret=long double
func.fmin.arg.0=double,y
func.fmin.args=0x2
func.fmin.ret=double
func.fminf.arg.0=float,y
func.fminf.args=0x2
func.fminf.ret=float
func.fminl.arg.0=long double,y
func.fminl.args=0x2
func.fminl.ret=long double
func.fmod.arg.0=double,y
func.fmod.args=0x2
func.fmod.ret=double
func.fmodf.arg.0=float,y
func.fmodf.args=0x2
func.fmodf.ret=float
func.fmodl.arg.0=long double,y
func.fmodl.args=0x2
func.fmodl.ret=long double
func.fopen.arg.0=const char *,mode
func.fopen.args=0x2
func.fopen.ret=FILE *
func.fpclassify.arg.0=double,x
func.fpclassify.args=0x1
func.fpclassify.ret=int
func.fprintf.arg.0=void *,va_args
func.fprintf.args=0x3
func.fprintf.ret=int
func.fputc.arg.0=FILE *,stream
func.fputc.args=0x2
func.fputc.ret=int
func.fputs.arg.0=FILE *,stream
func.fputs.args=0x2
func.fputs.ret=int
func.fputwc.arg.0=FILE *,stream
func.fputwc.args=0x2
func.fputwc.ret=wint_t
func.fputws.arg.0=FILE *,stream
func.fputws.args=0x2
func.fputws.ret=int
func.fread.arg.0=FILE *,stream
func.fread.args=0x4
func.fread.ret=size_t
func.free.arg.0=void *,ptr
func.free.args=0x1
func.free.ret=void
func.freopen.arg.0=FILE *,stream
func.freopen.args=0x3
func.freopen.ret=FILE *
func.frexp.arg.0=int *,exp
func.frexp.args=0x2
func.frexp.ret=double
func.frexpf.arg.0=int *,exp
func.frexpf.args=0x2
func.frexpf.ret=float
func.frexpl.arg.0=int *,exp
func.frexpl.args=0x2
func.frexpl.ret=long double
func.fscanf.arg.0=void *,va_args
func.fscanf.args=0x3
func.fscanf.ret=int
func.fseek.arg.0=int,whence
func.fseek.args=0x3
func.fseek.ret=int
func.fsetpos.arg.0=fpos_t *,pos
func.fsetpos.args=0x2
func.fsetpos.ret=int
func.fstat.arg.0=void *,buf
func.fstat.args=0x2
func.fstat.ret=int
func.ftell.arg.0=FILE *,stream
func.ftell.args=0x1
func.ftell.ret=long
func.fts_children_INODE64.arg.0=int,opotions
func.fts_children_INODE64.args=0x2
func.fts_children_INODE64.ret=void *
func.fts_close_INODE64.arg.0=void *,ftsp
func.fts_close_INODE64.args=0x1
func.fts_close_INODE64.ret=int
func.fts_open_INODE64.arg.0=void *,ftsen_INODE64t
func.fts_open_INODE64.args=0x4
func.fts_open_INODE64.ret=void *
func.fts_read_INODE64.arg.0=void *,ftsp
func.fts_read_INODE64.args=0x1
func.fts_read_INODE64.ret=void *
func.fts_set_INODE64.arg.0=int,options
func.fts_set_INODE64.args=0x3
func.fts_set_INODE64.ret=int
func.fwide.arg.0=int,mode
func.fwide.args=0x2
func.fwide.ret=int
func.fwprintf.arg.0=wchar_t *,format
func.fwprintf.args=0x2
func.fwprintf.ret=int
func.fwrite.arg.0=FILE *,stream
func.fwrite.args=0x4
func.fwrite.ret=size_t
func.fwscanf.arg.0=wchar_t *,format
func.fwscanf.args=0x2
func.fwscanf.ret=int
func.getc.arg.0=FILE *,stream
func.getc.args=0x1
func.getc.ret=int
func.getchar.args=0
func.getchar.ret=int
func.getenv.arg.0=const char *,name
func.getenv.args=0x1
func.getenv.ret=char *
func.geteuid.args=0
func.geteuid.ret=uid_t
func.getopt.arg.0=const char *,optstring
func.getopt.args=0x3
func.getopt.ret=int
func.getpid.args=0
func.getpid.ret=int
func.getprogname.args=0
func.getprogname.ret=const char *
func.gets.arg.0=char *,s
func.gets.args=0x1
func.gets.ret=char *
func.getsockname.arg.0=socklen_t *,addrlen
func.getsockname.args=0x3
func.getsockname.ret=int
func.getsockopt.arg.0=socklen_t *,optlen
func.getsockopt.args=0x5
func.getsockopt.ret=int
func.getuid.args=0
func.getuid.ret=uid_t
func.getwc.arg.0=FILE *,stream
func.getwc.args=0x1
func.getwc.ret=wint_t
func.getwchar.args=0
func.getwchar.ret=wint_t
func.gmtime.arg.0=time_t *,timer
func.gmtime.args=0x1
func.gmtime.ret=struct tm *
func.group_from_gid.arg.0=int,nogroup
func.group_from_gid.args=0x2
func.group_from_gid.ret=char *
func.humanize_number.arg.0=char *,buf
func.humanize_number.args=0x1
func.humanize_number.ret=int
func.hypot.arg.0=double,y
func.hypot.args=0x2
func.hypot.ret=double
func.hypotf.arg.0=float,y
func.hypotf.args=0x2
func.hypotf.ret=float
func.hypotl.arg.0=long double,y
func.hypotl.args=0x2
func.hypotl.ret=long double
func.ilogb.arg.0=double,x
func.ilogb.args=0x1
func.ilogb.ret=int
func.ilogbf.arg.0=float,x
func.ilogbf.args=0x1
func.ilogbf.ret=int
func.ilogbl.arg.0=long double,x
func.ilogbl.args=0x1
func.ilogbl.ret=int
func.imaxabs.arg.0=intmax_t,j
func.imaxabs.args=0x1
func.imaxabs.ret=intmax_t
func.imaxdiv.arg.0=intmax_t,denom
func.imaxdiv.args=0x2
func.imaxdiv.ret=imaxdiv_t
func.inet_aton.arg.0=void *,pin
func.inet_aton.args=0x2
func.inet_aton.ret=int
func.inet_ntoa.arg.0=void *,in
func.inet_ntoa.args=0x1
func.inet_ntoa.ret=char *
func.initstate.arg.0=size_t,size
func.initstate.args=0x3
func.initstate.ret=char *
func.ioctl.arg.0=unsigned long,request
func.ioctl.args=0x2
func.ioctl.ret=int
func.isalnum.arg.0=int,c
func.isalnum.args=0x1
func.isalnum.ret=int
func.isalpha.arg.0=int,c
func.isalpha.args=0x1
func.isalpha.ret=int
func.isatty.arg.0=int,fd
func.isatty.args=0x1
func.isatty.ret=int
func.isblank.arg.0=int,c
func.isblank.args=0x1
func.isblank.ret=int
func.iscntrl.arg.0=int,c
func.iscntrl.args=0x1
func.iscntrl.ret=int
func.isdigit.arg.0=int,c
func.isdigit.args=0x1
func.isdigit.ret=int
func.isfinite.arg.0=double,x
func.isfinite.args=0x1
func.isfinite.ret=bool
func.isgraph.arg.0=int,c
func.isgraph.args=0x1
func.isgraph.ret=int
func.isgreater.arg.0=double,y
func.isgreater.args=0x2
func.isgreater.ret=bool
func.isgreaterequal.arg.0=double,y
func.isgreaterequal.args=0x2
func.isgreaterequal.ret=bool
func.isinf.arg.0=double,x
func.isinf.args=0x1
func.isinf.ret=bool
func.isless.arg.0=double,y
func.isless.args=0x2
func.isless.ret=bool
func.islessequal.arg.0=double,y
func.islessequal.args=0x2
func.islessequal.ret=bool
func.islessgreater.arg.0=double,y
func.islessgreater.args=0x2
func.islessgreater.ret=bool
func.islower.arg.0=int,c
func.islower.args=0x1
func.islower.ret=int
func.isnan.arg.0=double,x
func.isnan.args=0x1
func.isnan.ret=bool
func.isnormal.arg.0=double,x
func.isnormal.args=0x1
func.isnormal.ret=bool
func.isprint.arg.0=int,c
func.isprint.args=0x1
func.isprint.ret=int
func.ispunct.arg.0=int,c
func.ispunct.args=0x1
func.ispunct.ret=int
func.isspace.arg.0=int,c
func.isspace.args=0x1
func.isspace.ret=int
func.isunordered.arg.0=double,y
func.isunordered.args=0x2
func.isunordered.ret=bool
func.isupper.arg.0=int,c
func.isupper.args=0x1
func.isupper.ret=int
func.iswalnum.arg.0=wint_t,wc
func.iswalnum.args=0x1
func.iswalnum.ret=int
func.iswalpha.arg.0=wint_t,wc
func.iswalpha.args=0x1
func.iswalpha.ret=int
func.iswblank.arg.0=wint_t,wc
func.iswblank.args=0x1
func.iswblank.ret=int
func.iswcntrl.arg.0=wint_t,wc
func.iswcntrl.args=0x1
func.iswcntrl.ret=int
func.iswctype.arg.0=wctype_t,desc
func.iswctype.args=0x2
func.iswctype.ret=int
func.iswdigit.arg.0=wint_t,wc
func.iswdigit.args=0x1
func.iswdigit.ret=int
func.iswgraph.arg.0=wint_t,wc
func.iswgraph.args=0x1
func.iswgraph.ret=int
func.iswlower.arg.0=wint_t,wc
func.iswlower.args=0x1
func.iswlower.ret=int
func.iswprint.arg.0=wint_t,wc
func.iswprint.args=0x1
func.iswprint.ret=int
func.iswpunct.arg.0=wint_t,wc
func.iswpunct.args=0x1
func.iswpunct.ret=int
func.iswspace.arg.0=wint_t,wc
func.iswspace.args=0x1
func.iswspace.ret=int
func.iswupper.arg.0=wint_t,wc
func.iswupper.args=0x1
func.iswupper.ret=int
func.iswxdigit.arg.0=wint_t,wc
func.iswxdigit.args=0x1
func.iswxdigit.ret=int
func.isxdigit.arg.0=int,c
func.isxdigit.args=0x1
func.isxdigit.ret=int
func.kill.arg.0=int,sig
func.kill.args=0x2
func.kill.ret=int
func.labs.arg.0=long,j
func.labs.args=0x1
func.labs.ret=long
func.ldexp.arg.0=int,exp
func.ldexp.args=0x2
func.ldexp.ret=double
func.ldexpf.arg.0=int,exp
func.ldexpf.args=0x2
func.ldexpf.ret=float
func.ldexpl.arg.0=int,exp
func.ldexpl.args=0x2
func.ldexpl.ret=long double
func.ldiv.arg.0=long,denom
func.ldiv.args=0x2
func.ldiv.ret=ldiv_t
func.lgamma.arg.0=double,x
func.lgamma.args=0x1
func.lgamma.ret=double
func.lgammaf.arg.0=float,x
func.lgammaf.args=0x1
func.lgammaf.ret=float
func.lgammal.arg.0=long double,x
func.lgammal.args=0x1
func.lgammal.ret=long double
func.llabs.arg.0=long long,j
func.llabs.args=0x1
func.llabs.ret=long long
func.lldiv.arg.0=long long,denom
func.lldiv.args=0x2
func.lldiv.ret=lldiv_t
func.llrint.arg.0=double,x
func.llrint.args=0x1
func.llrint.ret=long long
func.llrintf.arg.0=float,x
func.llrintf.args=0x1
func.llrintf.ret=long long
func.llrintl.arg.0=long double,x
func.llrintl.args=0x1
func.llrintl.ret=long long
func.llround.arg.0=double,x
func.llround.args=0x1
func.llround.ret=long long
func.llroundf.arg.0=float,x
func.llroundf.args=0x1
func.llroundf.ret=long long
func.llroundl.arg.0=long double,x
func.llroundl.args=0x1
func.llroundl.ret=long long
func.localeconv.args=0
func.localeconv.ret=struct lconv *
func.localtime.arg.0=time_t *,timer
func.localtime.args=0x1
func.localtime.ret=struct tm *
func.log.arg.0=double,x
func.log.args=0x1
func.log.ret=double
func.log10.arg.0=double,x
func.log10.args=0x1
func.log10.ret=double
func.log10f.arg.0=float,x
func.log10f.args=0x1
func.log10f.ret=float
func.log10l.arg.0=long double,x
func.log10l.args=0x1
func.log10l.ret=long double
func.log1p.arg.0=double,x
func.log1p.args=0x1
func.log1p.ret=double
func.log1pf.arg.0=float,x
func.log1pf.args=0x1
func.log1pf.ret=float
func.log1pl.arg.0=long double,x
func.log1pl.args=0x1
func.log1pl.ret=long double
func.log2.arg.0=double,x
func.log2.args=0x1
func.log2.ret=double
func.log2f.arg.0=float,x
func.log2f.args=0x1
func.log2f.ret=float
func.log2l.arg.0=long double,x
func.log2l.args=0x1
func.log2l.ret=long double
func.logb.arg.0=double,x
func.logb.args=0x1
func.logb.ret=double
func.logbf.arg.0=float,x
func.logbf.args=0x1
func.logbf.ret=float
func.logbl.arg.0=long double,x
func.logbl.args=0x1
func.logbl.ret=long double
func.logf.arg.0=float,x
func.logf.args=0x1
func.logf.ret=float
func.logl.arg.0=long double,x
func.logl.args=0x1
func.logl.ret=long double
func.longjmp.arg.0=int,val
func.longjmp.args=0x2
func.longjmp.ret=void
func.lrint.arg.0=double,x
func.lrint.args=0x1
func.lrint.ret=long
func.lrintf.arg.0=float,x
func.lrintf.args=0x1
func.lrintf.ret=long
func.lrintl.arg.0=long double,x
func.lrintl.args=0x1
func.lrintl.ret=long
func.lround.arg.0=double,x
func.lround.args=0x1
func.lround.ret=long
func.lroundf.arg.0=float,x
func.lroundf.args=0x1
func.lroundf.ret=long
func.lroundl.arg.0=long double,x
func.lroundl.args=0x1
func.lroundl.ret=long
func.lstat.arg.0=void *,buf
func.lstat.args=0x2
func.lstat.ret=void
func.main.arg.0=char **,envp
func.main.args=0x3
func.main.ret=int
func.malloc.arg.0=size_t,size
func.malloc.args=0x1
func.malloc.ret=void *
func.maskrune.arg.0=unsigned long,f
func.maskrune.args=0x2
func.maskrune.ret=int
func.mblen.arg.0=size_t,n
func.mblen.args=0x2
func.mblen.ret=int
func.mbrlen.arg.0=mbstate_t *,ps
func.mbrlen.args=0x3
func.mbrlen.ret=size_t
func.mbrtowc.arg.0=mbstate_t *,ps
func.mbrtowc.args=0x4
func.mbrtowc.ret=size_t
func.mbsinit.arg.0=mbstate_t *,ps
func.mbsinit.args=0x1
func.mbsinit.ret=int
func.mbsrtowcs.arg.0=mbstate_t *,ps
func.mbsrtowcs.args=0x4
func.mbsrtowcs.ret=size_t
func.mbstowcs.arg.0=size_t,n
func.mbstowcs.args=0x3
func.mbstowcs.ret=size_t
func.mbtowc.arg.0=size_t,n
func.mbtowc.args=0x3
func.mbtowc.ret=int
func.memchr.arg.0=size_t,n
func.memchr.args=0x3
func.memchr.ret=void *
func.memcmp.arg.0=size_t,n
func.memcmp.args=0x3
func.memcmp.ret=int
func.memcpy.arg.0=size_t,n
func.memcpy.args=0x3
func.memcpy.ret=void *
func.memmem.arg.0=int,little_len
func.memmem.args=0x4
func.memmem.ret=void *
func.memmove.arg.0=size_t,n
func.memmove.args=0x3
func.memmove.ret=void *
func.memset.arg.0=size_t,n
func.memset.args=0x3
func.memset.ret=void *
func.mkstemp.arg.0=char *,template
func.mkstemp.args=0x1
func.mkstemp.ret=int
func.mktemp.arg.0=char *,template
func.mktemp.args=0x1
func.mktemp.ret=char *
func.mktime.arg.0=struct tm *,timeptr
func.mktime.args=0x1
func.mktime.ret=time_t
func.mmap.arg.0=size_t,offset
func.mmap.args=0x6
func.mmap.ret=void *
func.modf.arg.0=double *,iptr
func.modf.args=0x2
func.modf.ret=double
func.modff.arg.0=float *,iptr
func.modff.args=0x2
func.modff.ret=float
func.modfl.arg.0=long double *,iptr
func.modfl.args=0x2
func.modfl.ret=long double
func.munmap.arg.0=size_t,length
func.munmap.args=0x2
func.munmap.ret=int
func.nan.arg.0=const char *,str
func.nan.args=0x1
func.nan.ret=double
func.nanf.arg.0=const char *,str
func.nanf.args=0x1
func.nanf.ret=float
func.nanl.arg.0=const char *,str
func.nanl.args=0x1
func.nanl.ret=long double
func.nanosleep.arg.0=struct timespec *,rem
func.nanosleep.args=0x2
func.nanosleep.ret=int
func.nearbyint.arg.0=double,x
func.nearbyint.args=0x1
func.nearbyint.ret=double
func.nearbyintf.arg.0=float,x
func.nearbyintf.args=0x1
func.nearbyintf.ret=float
func.nearbyintl.arg.0=long double,x
func.nearbyintl.args=0x1
func.nearbyintl.ret=long double
func.nextafter.arg.0=double,y
func.nextafter.args=0x2
func.nextafter.ret=double
func.nextafterf.arg.0=float,y
func.nextafterf.args=0x2
func.nextafterf.ret=float
func.nextafterl.arg.0=long double,y
func.nextafterl.args=0x2
func.nextafterl.ret=long double
func.nexttoward.arg.0=long double,y
func.nexttoward.args=0x2
func.nexttoward.ret=double
func.nexttowardf.arg.0=long double,y
func.nexttowardf.args=0x2
func.nexttowardf.ret=float
func.nexttowardl.arg.0=long double,y
func.nexttowardl.args=0x2
func.nexttowardl.ret=long double
func.nl_langinfo.arg.0=nl_item,item
func.nl_langinfo.args=0x1
func.nl_langinfo.ret=char *
func.nl_langinfo_l.arg.0=locale_t,locale
func.nl_langinfo_l.args=0x2
func.nl_langinfo_l.ret=char *
func.objc_enumerationMutation.arg.0=void *,instance
func.objc_enumerationMutation.args=0x1
func.objc_enumerationMutation.ret=void
func.objc_msgSend.arg.0=char *,selector
func.objc_msgSend.args=0x2
func.objc_msgSend.ret=void *
func.objc_msgSendSuper2.arg.0=char *,selector
func.objc_msgSendSuper2.args=0x2
func.objc_msgSendSuper2.ret=void *
func.objc_release.arg.0=void *,instance
func.objc_release.args=0x1
func.objc_release.ret=void
func.objc_retain.arg.0=void *,instance
func.objc_retain.args=0x1
func.objc_retain.ret=void
func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance
func.objc_retainAutoreleasedReturnValue.args=0x1
func.objc_retainAutoreleasedReturnValue.ret=void
func.objc_storeStrong.arg.0=int,type
func.objc_storeStrong.args=0x2
func.objc_storeStrong.ret=void *
func.open.arg.0=int,oflag
func.open.args=0x2
func.open.ret=int
func.openat.arg.0=int,oflag
func.openat.args=0x3
func.openat.ret=int
func.pclose.arg.0=FILE *,stream
func.pclose.args=0x1
func.pclose.ret=int
func.perror.arg.0=const char *,s
func.perror.args=0x1
func.perror.ret=void
func.popen.arg.0=const char *,mode
func.popen.args=0x2
func.popen.ret=FILE *
func.pow.arg.0=double,y
func.pow.args=0x2
func.pow.ret=double
func.powf.arg.0=float,y
func.powf.args=0x2
func.powf.ret=float
func.powl.arg.0=long double,y
func.powl.args=0x2
func.powl.ret=long double
func.prctl.arg.0=unsigned long,v5
func.prctl.args=0x5
func.prctl.ret=int
func.printf.arg.0=const char *,format
func.printf.args=0x1
func.printf.ret=int
func.ptrace.arg.0=void *,data
func.ptrace.args=0x4
func.ptrace.ret=long
func.putc.arg.0=FILE *,stream
func.putc.args=0x2
func.putc.ret=int
func.putchar.arg.0=int,c
func.putchar.args=0x1
func.putchar.ret=int
func.puts.arg.0=const char *,s
func.puts.args=0x1
func.puts.ret=int
func.pututxline.arg.0=void *,utx
func.pututxline.args=0x1
func.pututxline.ret=void *
func.putwc.arg.0=FILE *,stream
func.putwc.args=0x2
func.putwc.ret=wint_t
func.putwchar.arg.0=wchar_t,c
func.putwchar.args=0x1
func.putwchar.ret=wint_t
func.qsort.arg.0=void *,compar
func.qsort.args=0x4
func.qsort.ret=void
func.quick_exit.arg.0=int,status
func.quick_exit.args=0x1
func.quick_exit.ret=void
func.raise.arg.0=int,sig
func.raise.args=0x1
func.raise.ret=int
func.rand.args=0
func.rand.ret=int
func.random.args=0
func.random.ret=uint32_t
func.read.arg.0=size_t,nbyte
func.read.args=0x3
func.read.ret=ssize_t
func.realloc.arg.0=size_t,size
func.realloc.args=0x2
func.realloc.ret=void *
func.reallocf.arg.0=size_t,size
func.reallocf.args=0x2
func.reallocf.ret=void *
func.recv.arg.0=int,flags
func.recv.args=0x4
func.recv.ret=ssize_t
func.remainder.arg.0=double,y
func.remainder.args=0x2
func.remainder.ret=double
func.remainderf.arg.0=float,y
func.remainderf.args=0x2
func.remainderf.ret=float
func.remainderl.arg.0=long double,y
func.remainderl.args=0x2
func.remainderl.ret=long double
func.remove.arg.0=const char *,filename
func.remove.args=0x1
func.remove.ret=int
func.remquo.arg.0=int *,pquo
func.remquo.args=0x3
func.remquo.ret=double
func.remquof.arg.0=int *,pquo
func.remquof.args=0x3
func.remquof.ret=float
func.remquol.arg.0=int *,pquo
func.remquol.args=0x3
func.remquol.ret=long double
func.rename.arg.0=const char *,newpath
func.rename.args=0x2
func.rename.ret=int
func.rewind.arg.0=FILE *,stream
func.rewind.args=0x1
func.rewind.ret=void
func.rint.arg.0=double,x
func.rint.args=0x1
func.rint.ret=double
func.rintf.arg.0=float,x
func.rintf.args=0x1
func.rintf.ret=float
func.rintl.arg.0=long double,x
func.rintl.args=0x1
func.rintl.ret=long double
func.round.arg.0=double,x
func.round.args=0x1
func.round.ret=double
func.roundf.arg.0=float,x
func.roundf.args=0x1
func.roundf.ret=float
func.roundl.arg.0=long double,x
func.roundl.args=0x1
func.roundl.ret=long double
func.scalbln.arg.0=long,ex
func.scalbln.args=0x2
func.scalbln.ret=double
func.scalblnf.arg.0=long,ex
func.scalblnf.args=0x2
func.scalblnf.ret=float
func.scalblnl.arg.0=long,ex
func.scalblnl.args=0x2
func.scalblnl.ret=long double
func.scalbn.arg.0=int,ex
func.scalbn.args=0x2
func.scalbn.ret=double
func.scalbnf.arg.0=int,ex
func.scalbnf.args=0x2
func.scalbnf.ret=float
func.scalbnl.arg.0=int,ex
func.scalbnl.args=0x2
func.scalbnl.ret=long double
func.scanf.arg.0=const char *,format
func.scanf.args=0x1
func.scanf.ret=int
func.select.arg.0=struct timeval *,timeout
func.select.args=0x5
func.select.ret=int
func.send.arg.0=int,flags
func.send.args=0x4
func.send.ret=ssize_t
func.setbuf.arg.0=char *,buf
func.setbuf.args=0x2
func.setbuf.ret=void
func.setenv.arg.0=int,overwrite
func.setenv.args=0x3
func.setenv.ret=int
func.setjmp.arg.0=jmp_buf,env
func.setjmp.args=0x1
func.setjmp.ret=int
func.setlocale.arg.0=const char *,locale
func.setlocale.args=0x2
func.setlocale.ret=char *
func.setsockopt.arg.0=socklen_t,optlen
func.setsockopt.args=0x5
func.setsockopt.ret=int
func.setstate.arg.0=const char *,state
func.setstate.args=0x1
func.setstate.ret=const char *
func.setvbuf.arg.0=size_t,size
func.setvbuf.args=0x4
func.setvbuf.ret=int
func.sigaction.arg.0=struct sigaction *,oldact
func.sigaction.args=0x3
func.sigaction.ret=int
func.signal.arg.0=void *,func
func.signal.args=0x2
func.signal.ret=void
func.signbit.arg.0=double,x
func.signbit.args=0x1
func.signbit.ret=bool
func.sin.arg.0=double,x
func.sin.args=0x1
func.sin.ret=double
func.sinf.arg.0=float,x
func.sinf.args=0x1
func.sinf.ret=float
func.sinh.arg.0=double,x
func.sinh.args=0x1
func.sinh.ret=double
func.sinhf.arg.0=float,x
func.sinhf.args=0x1
func.sinhf.ret=float
func.sinhl.arg.0=long double,x
func.sinhl.args=0x1
func.sinhl.ret=long double
func.sinl.arg.0=long double,x
func.sinl.args=0x1
func.sinl.ret=long double
func.sleep.arg.0=int,s
func.sleep.args=0x1
func.sleep.ret=int
func.snprintf.arg.0=va_list,args
func.snprintf.args=0x4
func.snprintf.ret=int
func.snprintf_chk.arg.0=va_list,args
func.snprintf_chk.args=0x4
func.snprintf_chk.ret=int
func.socket.arg.0=int,protocol
func.socket.args=0x3
func.socket.ret=int
func.sprintf.arg.0=va_list,args
func.sprintf.args=0x3
func.sprintf.ret=int
func.sprintf_chk.arg.0=va_list,args
func.sprintf_chk.args=0x3
func.sprintf_chk.ret=int
func.sqrt.arg.0=double,x
func.sqrt.args=0x1
func.sqrt.ret=double
func.sqrtf.arg.0=float,x
func.sqrtf.args=0x1
func.sqrtf.ret=float
func.sqrtl.arg.0=long double,x
func.sqrtl.args=0x1
func.sqrtl.ret=long double
func.srand.arg.0=int,seed
func.srand.args=0x1
func.srand.ret=void
func.srandom.arg.0=uint32_t,seed
func.srandom.args=0x1
func.srandom.ret=uint32_t
func.srandomdev.args=0
func.srandomdev.ret=void
func.sscanf.arg.0=va_list,args
func.sscanf.args=0x3
func.sscanf.ret=int
func.strcasecmp.arg.0=const char *,s2
func.strcasecmp.args=0x2
func.strcasecmp.ret=int
func.strcat.arg.0=const char *,s2
func.strcat.args=0x2
func.strcat.ret=char *
func.strchr.arg.0=int,c
func.strchr.args=0x2
func.strchr.ret=char *
func.strcmp.arg.0=const char *,s2
func.strcmp.args=0x2
func.strcmp.ret=int
func.strcoll.arg.0=const char *,s2
func.strcoll.args=0x2
func.strcoll.ret=int
func.strcpy.arg.0=const char *,src
func.strcpy.args=0x2
func.strcpy.ret=char *
func.strcpy_chk.arg.0=const char *,src
func.strcpy_chk.args=0x2
func.strcpy_chk.ret=char *
func.strcspn.arg.0=const char *,s2
func.strcspn.args=0x2
func.strcspn.ret=size_t
func.strdup.arg.0=const char *,src
func.strdup.args=0x1
func.strdup.ret=char *
func.strerror.arg.0=int,errnum
func.strerror.args=0x1
func.strerror.ret=char *
func.strftime.arg.0=struct tm *,timeptr
func.strftime.args=0x4
func.strftime.ret=size_t
func.strlcpy.arg.0=size_t,_n
func.strlcpy.args=0x3
func.strlcpy.ret=char *
func.strlen.arg.0=const char *,s
func.strlen.args=0x1
func.strlen.ret=size_t
func.strmode.arg.0=char *,bp
func.strmode.args=0x2
func.strmode.ret=void
func.strncasecmp.arg.0=size_t,n
func.strncasecmp.args=0x3
func.strncasecmp.ret=int
func.strncat.arg.0=size_t,n
func.strncat.args=0x3
func.strncat.ret=char *
func.strncmp.arg.0=size_t,n
func.strncmp.args=0x3
func.strncmp.ret=int
func.strncpy.arg.0=size_t,_n
func.strncpy.args=0x3
func.strncpy.ret=char *
func.strndup.arg.0=int,n
func.strndup.args=0x2
func.strndup.ret=char *
func.strpbrk.arg.0=const char *,s2
func.strpbrk.args=0x2
func.strpbrk.ret=char *
func.strrchr.arg.0=int,c
func.strrchr.args=0x2
func.strrchr.ret=char *
func.strspn.arg.0=const char *,s2
func.strspn.args=0x2
func.strspn.ret=size_t
func.strstr.arg.0=const char *,s2
func.strstr.args=0x2
func.strstr.ret=char *
func.strtod.arg.0=char **,endptr
func.strtod.args=0x2
func.strtod.ret=double
func.strtof.arg.0=char **,endptr
func.strtof.args=0x2
func.strtof.ret=float
func.strtoimax.arg.0=int,base
func.strtoimax.args=0x3
func.strtoimax.ret=intmax_t
func.strtok.arg.0=const char *,s2
func.strtok.args=0x2
func.strtok.ret=char *
func.strtol.arg.0=int,base
func.strtol.args=0x3
func.strtol.ret=long
func.strtold.arg.0=char **,endptr
func.strtold.args=0x2
func.strtold.ret=long double
func.strtoll.arg.0=int,base
func.strtoll.args=0x3
func.strtoll.ret=long long
func.strtoul.arg.0=int,base
func.strtoul.args=0x3
func.strtoul.ret=long
func.strtoull.arg.0=int,base
func.strtoull.args=0x3
func.strtoull.ret=long long
func.strtoumax.arg.0=int,base
func.strtoumax.args=0x3
func.strtoumax.ret=uintmax_t
func.strxfrm.arg.0=size_t,n
func.strxfrm.args=0x3
func.strxfrm.ret=size_t
func.swprintf.arg.0=wchar_t *,format
func.swprintf.args=0x3
func.swprintf.ret=int
func.swscanf.arg.0=wchar_t *,format
func.swscanf.args=0x2
func.swscanf.ret=int
func.symlink.arg.0=const char *,path2
func.symlink.args=0x2
func.symlink.ret=int
func.system.arg.0=const char *,string
func.system.args=0x1
func.system.ret=int
func.tan.arg.0=double,x
func.tan.args=0x1
func.tan.ret=double
func.tanf.arg.0=float,x
func.tanf.args=0x1
func.tanf.ret=float
func.tanh.arg.0=double,x
func.tanh.args=0x1
func.tanh.ret=double
func.tanhf.arg.0=float,x
func.tanhf.args=0x1
func.tanhf.ret=float
func.tanhl.arg.0=long double,x
func.tanhl.args=0x1
func.tanhl.ret=long double
func.tanl.arg.0=long double,x
func.tanl.args=0x1
func.tanl.ret=long double
func.textdomain.arg.0=char *,domainname
func.textdomain.args=0x1
func.textdomain.ret=char *
func.tgamma.arg.0=double,x
func.tgamma.args=0x1
func.tgamma.ret=double
func.tgammaf.arg.0=float,x
func.tgammaf.args=0x1
func.tgammaf.ret=float
func.tgammal.arg.0=long double,x
func.tgammal.args=0x1
func.tgammal.ret=long double
func.tgoto.arg.0=int,row
func.tgoto.args=0x3
func.tgoto.ret=char *
func.time.arg.0=time_t *,timer
func.time.args=0x1
func.time.ret=time_t
func.tmpfile.args=0
func.tmpfile.ret=FILE *
func.tmpnam.arg.0=char *,s
func.tmpnam.args=0x1
func.tmpnam.ret=char *
func.tolower.arg.0=int,c
func.tolower.args=0x1
func.tolower.ret=int
func.toupper.arg.0=int,c
func.toupper.args=0x1
func.toupper.ret=int
func.towctrans.arg.0=wctrans_t,desc
func.towctrans.args=0x2
func.towctrans.ret=wint_t
func.towlower.arg.0=wint_t,wc
func.towlower.args=0x1
func.towlower.ret=wint_t
func.towupper.arg.0=wint_t,wc
func.towupper.args=0x1
func.towupper.ret=wint_t
func.trunc.arg.0=double,x
func.trunc.args=0x1
func.trunc.ret=double
func.truncf.arg.0=float,x
func.truncf.args=0x1
func.truncf.ret=float
func.truncl.arg.0=long double,x
func.truncl.args=0x1
func.truncl.ret=long double
func.umask.arg.0=int,m
func.umask.args=0x1
func.umask.ret=int
func.ungetc.arg.0=FILE *,stream
func.ungetc.args=0x2
func.ungetc.ret=int
func.ungetwc.arg.0=FILE *,stream
func.ungetwc.args=0x2
func.ungetwc.ret=wint_t
func.unlink.arg.0=const char *,path
func.unlink.args=0x1
func.unlink.ret=int
func.user_from_uid.arg.0=int,nouser
func.user_from_uid.args=0x2
func.user_from_uid.ret=char *
func.usleep.arg.0=int,s
func.usleep.args=0x1
func.usleep.ret=int
func.vfprintf.arg.0=va_list,ap
func.vfprintf.args=0x3
func.vfprintf.ret=int
func.vfscanf.arg.0=va_list,ap
func.vfscanf.args=0x3
func.vfscanf.ret=int
func.vfwprintf.arg.0=va_list,arg
func.vfwprintf.args=0x3
func.vfwprintf.ret=int
func.vfwscanf.arg.0=va_list,arg
func.vfwscanf.args=0x3
func.vfwscanf.ret=int
func.vprintf.arg.0=va_list,ap
func.vprintf.args=0x2
func.vprintf.ret=int
func.vscanf.arg.0=va_list,ap
func.vscanf.args=0x2
func.vscanf.ret=int
func.vsnprintf.arg.0=va_list,arg
func.vsnprintf.args=0x4
func.vsnprintf.ret=int
func.vsprintf.arg.0=va_list,arg
func.vsprintf.args=0x3
func.vsprintf.ret=int
func.vsscanf.arg.0=va_list,arg
func.vsscanf.args=0x3
func.vsscanf.ret=int
func.vswprintf.arg.0=va_list,arg
func.vswprintf.args=0x4
func.vswprintf.ret=int
func.vswscanf.arg.0=va_list,arg
func.vswscanf.args=0x3
func.vswscanf.ret=int
func.vwprintf.arg.0=va_list,arg
func.vwprintf.args=0x2
func.vwprintf.ret=int
func.vwscanf.arg.0=va_list,arg
func.vwscanf.args=0x2
func.vwscanf.ret=int
func.wait.arg.0=int *,wstatus
func.wait.args=0x1
func.wait.ret=pid_t
func.waitid.arg.0=int,options
func.waitid.args=0x4
func.waitid.ret=int
func.waitpid.arg.0=int,options
func.waitpid.args=0x3
func.waitpid.ret=pid_t
func.warn.arg.0=const char *,format
func.warn.args=0x1
func.warn.ret=void
func.warnc.arg.0=int,opt
func.warnc.args=0x2
func.warnc.ret=void
func.warnx.arg.0=const char *,format
func.warnx.args=0x1
func.warnx.ret=void
func.wcrtomb.arg.0=mbstate_t *,ps
func.wcrtomb.args=0x3
func.wcrtomb.ret=size_t
func.wcscat.arg.0=wchar_t *,s2
func.wcscat.args=0x2
func.wcscat.ret=wchar_t *
func.wcschr.arg.0=wchar_t,c
func.wcschr.args=0x2
func.wcschr.ret=wchar_t *
func.wcscmp.arg.0=wchar_t *,s2
func.wcscmp.args=0x2
func.wcscmp.ret=int
func.wcscoll.arg.0=wchar_t *,s2
func.wcscoll.args=0x2
func.wcscoll.ret=int
func.wcscpy.arg.0=wchar_t *,s2
func.wcscpy.args=0x2
func.wcscpy.ret=wchar_t *
func.wcscspn.arg.0=wchar_t *,s2
func.wcscspn.args=0x2
func.wcscspn.ret=size_t
func.wcsftime.arg.0=struct tm *,timeptr
func.wcsftime.args=0x4
func.wcsftime.ret=size_t
func.wcslen.arg.0=wchar_t *,s
func.wcslen.args=0x1
func.wcslen.ret=size_t
func.wcsncat.arg.0=size_t,n
func.wcsncat.args=0x3
func.wcsncat.ret=wchar_t *
func.wcsncmp.arg.0=size_t,n
func.wcsncmp.args=0x3
func.wcsncmp.ret=int
func.wcsncpy.arg.0=size_t,n
func.wcsncpy.args=0x3
func.wcsncpy.ret=wchar_t *
func.wcspbrk.arg.0=wchar_t *,s2
func.wcspbrk.args=0x2
func.wcspbrk.ret=wchar_t *
func.wcsrchr.arg.0=wchar_t,c
func.wcsrchr.args=0x2
func.wcsrchr.ret=wchar_t *
func.wcsrtombs.arg.0=mbstate_t *,ps
func.wcsrtombs.args=0x4
func.wcsrtombs.ret=size_t
func.wcsspn.arg.0=wchar_t *,s2
func.wcsspn.args=0x2
func.wcsspn.ret=size_t
func.wcsstr.arg.0=wchar_t *,s2
func.wcsstr.args=0x2
func.wcsstr.ret=wchar_t *
func.wcstod.arg.0=wchar_t **,endptr
func.wcstod.args=0x2
func.wcstod.ret=double
func.wcstof.arg.0=wchar_t **,endptr
func.wcstof.args=0x2
func.wcstof.ret=float
func.wcstoimax.arg.0=int,base
func.wcstoimax.args=0x3
func.wcstoimax.ret=intmax_t
func.wcstok.arg.0=wchar_t **,ptr
func.wcstok.args=0x3
func.wcstok.ret=wchar_t *
func.wcstol.arg.0=int,base
func.wcstol.args=0x3
func.wcstol.ret=long
func.wcstold.arg.0=wchar_t **,endptr
func.wcstold.args=0x2
func.wcstold.ret=long double
func.wcstoll.arg.0=int,base
func.wcstoll.args=0x3
func.wcstoll.ret=long long
func.wcstombs.arg.0=size_t,n
func.wcstombs.args=0x3
func.wcstombs.ret=size_t
func.wcstoul.arg.0=int,base
func.wcstoul.args=0x3
func.wcstoul.ret=long
func.wcstoull.arg.0=int,base
func.wcstoull.args=0x3
func.wcstoull.ret=long long
func.wcstoumax.arg.0=int,base
func.wcstoumax.args=0x3
func.wcstoumax.ret=uintmax_t
func.wcsxfrm.arg.0=size_t,n
func.wcsxfrm.args=0x3
func.wcsxfrm.ret=size_t
func.wctob.arg.0=wint_t,c
func.wctob.args=0x1
func.wctob.ret=int
func.wctomb.arg.0=wchar_t,wchar
func.wctomb.args=0x2
func.wctomb.ret=int
func.wctrans.arg.0=const char *,property
func.wctrans.args=0x1
func.wctrans.ret=wctrans_t
func.wctype.arg.0=const char *,property
func.wctype.args=0x1
func.wctype.ret=wctype_t
func.wmemchr.arg.0=size_t,n
func.wmemchr.args=0x3
func.wmemchr.ret=wchar_t *
func.wmemcmp.arg.0=size_t,n
func.wmemcmp.args=0x3
func.wmemcmp.ret=int
func.wmemcpy.arg.0=size_t,n
func.wmemcpy.args=0x3
func.wmemcpy.ret=wchar_t *
func.wmemmove.arg.0=size_t,n
func.wmemmove.args=0x3
func.wmemmove.ret=wchar_t *
func.wmemset.arg.0=size_t,n
func.wmemset.args=0x3
func.wmemset.ret=wchar_t *
func.wprintf.arg.0=wchar_t *,format
func.wprintf.args=0x1
func.wprintf.ret=int
func.write.arg.0=size_t,nbytes
func.write.args=0x3
func.write.ret=ssize_t
func.wscanf.arg.0=wchar_t *,format
func.wscanf.args=0x1
func.wscanf.ret=int
func.xmalloc.arg.0=size_t,size
func.xmalloc.args=0x1
func.xmalloc.ret=void *
fwide=func
fwprintf=func
fwrite=func
fwscanf=func
getc=func
getchar=func
getenv=func
geteuid=func
getopt=func
getpid=func
getprogname=func
gets=func
getsockname=func
getsockopt=func
getuid=func
getwc=func
getwchar=func
gmtime=func
group_from_gid=func
humanize_number=func
hypot=func
hypotf=func
hypotl=func
ilogb=func
ilogbf=func
ilogbl=func
imaxabs=func
imaxdiv=func
inet_aton=func
inet_ntoa=func
initstate=func
ioctl=func
isalnum=func
isalpha=func
isatty=func
isblank=func
iscntrl=func
isdigit=func
isfinite=func
isgraph=func
isgreater=func
isgreaterequal=func
isinf=func
isless=func
islessequal=func
islessgreater=func
islower=func
isnan=func
isnormal=func
isprint=func
ispunct=func
isspace=func
isunordered=func
isupper=func
iswalnum=func
iswalpha=func
iswblank=func
iswcntrl=func
iswctype=func
iswdigit=func
iswgraph=func
iswlower=func
iswprint=func
iswpunct=func
iswspace=func
iswupper=func
iswxdigit=func
isxdigit=func
kill=func
labs=func
ldexp=func
ldexpf=func
ldexpl=func
ldiv=func
lgamma=func
lgammaf=func
lgammal=func
llabs=func
lldiv=func
llrint=func
llrintf=func
llrintl=func
llround=func
llroundf=func
llroundl=func
localeconv=func
localtime=func
log=func
log10=func
log10f=func
log10l=func
log1p=func
log1pf=func
log1pl=func
log2=func
log2f=func
log2l=func
logb=func
logbf=func
logbl=func
logf=func
logl=func
longjmp=func
lrint=func
lrintf=func
lrintl=func
lround=func
lroundf=func
lroundl=func
lstat=func
main=func
malloc=func
maskrune=func
mblen=func
mbrlen=func
mbrtowc=func
mbsinit=func
mbsrtowcs=func
mbstowcs=func
mbtowc=func
memchr=func
memcmp=func
memcpy=func
memmem=func
memmove=func
memset=func
mkstemp=func
mktemp=func
mktime=func
mmap=func
modf=func
modff=func
modfl=func
munmap=func
nan=func
nanf=func
nanl=func
nanosleep=func
nearbyint=func
nearbyintf=func
nearbyintl=func
nextafter=func
nextafterf=func
nextafterl=func
nexttoward=func
nexttowardf=func
nexttowardl=func
nl_langinfo=func
nl_langinfo_l=func
objc_enumerationMutation=func
objc_msgSend=func
objc_msgSendSuper2=func
objc_release=func
objc_retain=func
objc_retainAutoreleasedReturnValue=func
objc_storeStrong=func
open=func
openat=func
pclose=func
perror=func
popen=func
pow=func
powf=func
powl=func
prctl=func
printf=func
ptrace=func
putc=func
putchar=func
puts=func
pututxline=func
putwc=func
putwchar=func
qsort=func
quick_exit=func
raise=func
rand=func
random=func
read=func
realloc=func
reallocf=func
recv=func
remainder=func
remainderf=func
remainderl=func
remove=func
remquo=func
remquof=func
remquol=func
rename=func
rewind=func
rint=func
rintf=func
rintl=func
round=func
roundf=func
roundl=func
scalbln=func
scalblnf=func
scalblnl=func
scalbn=func
scalbnf=func
scalbnl=func
scanf=func
select=func
send=func
setbuf=func
setenv=func
setjmp=func
setlocale=func
setsockopt=func
setstate=func
setvbuf=func
sigaction=func
signal=func
signbit=func
sin=func
sinf=func
sinh=func
sinhf=func
sinhl=func
sinl=func
sleep=func
snprintf=func
snprintf_chk=func
socket=func
sprintf=func
sprintf_chk=func
sqrt=func
sqrtf=func
sqrtl=func
srand=func
srandom=func
srandomdev=func
sscanf=func
strcasecmp=func
strcat=func
strchr=func
strcmp=func
strcoll=func
strcpy=func
strcpy_chk=func
strcspn=func
strdup=func
strerror=func
strftime=func
strlcpy=func
strlen=func
strmode=func
strncasecmp=func
strncat=func
strncmp=func
strncpy=func
strndup=func
strpbrk=func
strrchr=func
strspn=func
strstr=func
strtod=func
strtof=func
strtoimax=func
strtok=func
strtol=func
strtold=func
strtoll=func
strtoul=func
strtoull=func
strtoumax=func
strxfrm=func
swprintf=func
swscanf=func
symlink=func
system=func
tan=func
tanf=func
tanh=func
tanhf=func
tanhl=func
tanl=func
textdomain=func
tgamma=func
tgammaf=func
tgammal=func
tgoto=func
time=func
tmpfile=func
tmpnam=func
tolower=func
toupper=func
towctrans=func
towlower=func
towupper=func
trunc=func
truncf=func
truncl=func
umask=func
ungetc=func
ungetwc=func
unlink=func
user_from_uid=func
usleep=func
vfprintf=func
vfscanf=func
vfwprintf=func
vfwscanf=func
vprintf=func
vscanf=func
vsnprintf=func
vsprintf=func
vsscanf=func
vswprintf=func
vswscanf=func
vwprintf=func
vwscanf=func
wait=func
waitid=func
waitpid=func
warn=func
warnc=func
warnx=func
wcrtomb=func
wcscat=func
wcschr=func
wcscmp=func
wcscoll=func
wcscpy=func
wcscspn=func
wcsftime=func
wcslen=func
wcsncat=func
wcsncmp=func
wcsncpy=func
wcspbrk=func
wcsrchr=func
wcsrtombs=func
wcsspn=func
wcsstr=func
wcstod=func
wcstof=func
wcstoimax=func
wcstok=func
wcstol=func
wcstold=func
wcstoll=func
wcstombs=func
wcstoul=func
wcstoull=func
wcstoumax=func
wcsxfrm=func
wctob=func
wctomb=func
wctrans=func
wctype=func
wmemchr=func
wmemcmp=func
wmemcpy=func
wmemmove=func
wmemset=func
wprintf=func
write=func
wscanf=func
xmalloc=func

/core/analysis/cc
amd64=cc
amd64syscall=cc
cc.amd64.arg0=rdi
cc.amd64.arg1=rsi
cc.amd64.arg10=xmm4
cc.amd64.arg2=rdx
cc.amd64.arg3=rcx
cc.amd64.arg4=r8
cc.amd64.arg5=r9
cc.amd64.arg6=xmm0
cc.amd64.arg7=xmm1
cc.amd64.arg8=xmm2
cc.amd64.arg9=xmm3
cc.amd64.ret=rax
cc.amd64syscall.arg0=rdi
cc.amd64syscall.arg1=rsi
cc.amd64syscall.arg2=rdx
cc.amd64syscall.arg3=r10
cc.amd64syscall.arg4=r8
cc.amd64syscall.arg5=r9
cc.amd64syscall.ret=rax
cc.ms.arg0=rcx
cc.ms.arg1=rdx
cc.ms.arg2=r8
cc.ms.arg3=r9
cc.ms.argn=stack
cc.ms.ret=rax
cc.reg.arg0=rdi
cc.reg.arg1=rsi
cc.reg.arg2=rdx
cc.reg.arg3=rcx
cc.reg.ret=rdi
cc.swift.arg0=rdi
cc.swift.arg1=rsi
cc.swift.arg10=xmm4
cc.swift.arg2=rdx
cc.swift.arg3=rcx
cc.swift.arg4=r8
cc.swift.arg5=r9
cc.swift.arg6=xmm0
cc.swift.arg7=xmm1
cc.swift.arg8=xmm2
cc.swift.arg9=xmm3
cc.swift.error=r12
cc.swift.ret=rax
cc.swift.self=r13
default.cc=amd64
ms=cc
reg=cc
swift=cc

/core/analysis/classes

/core/analysis/classes/attrs

/core/analysis/functions
0x1000={"name":"sym._init","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":8,"bp_frame":true,"bbs":[4096,4116,4118]}
0x1080={"name":"fcn.00001080","bits":64,"type":1,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4224]}
0x10a0={"name":"sym.imp.clock_gettime","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4256]}
0x10b0={"name":"sym.imp.__stack_chk_fail","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"noreturn":true,"bbs":[4272]}
0x10c0={"name":"sym.imp.malloc","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4288]}
0x10d0={"name":"sym.imp.__printf_chk","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4304]}
0x10e0={"name":"dbg.main","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":7,"bp_frame":true,"bbs":[4320]}
0x1100={"name":"entry0","bits":64,"type":1,"cc":"amd64","stack":8,"maxstack":8,"ninstr":12,"bp_frame":true,"bbs":[4352],"vars":[{"name":"rtld_fini","type":"void *","reg":"rdx","accs":[{"off":6,"type":"r","reg":"rdx"}]}]}
0x1130={"name":"sym.deregister_tm_clones","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":9,"bp_frame":true,"bbs":[4400,4419,4431,4440]}
0x1160={"name":"sym.register_tm_clones","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":14,"bp_frame":true,"bbs":[4448,4484,4496,4504]}
0x11a0={"name":"sym.__do_global_dtors_aux","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":14,"bp_frame":true,"bp_off":8,"bbs":[4512,4525,4539,4551,4568]}
0x11e0={"name":"entry.init0","bits":64,"type":1,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"bbs":[4576]}
0x11f0={"name":"dbg.vec_sum","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":0,"ninstr":14,"bp_frame":true,"bbs":[4592,4600,4616,4627,4632],"vars":[{"name":"n","type":"int","reg":"rsi","accs":[{"off":4,"type":"r","reg":"rsi"},{"off":8,"type":"r","reg":"rsi"}]},{"name":"arg1","type":"uintmax_t","reg":"rdi","accs":[{"off":11,"type":"r","reg":"rdi"},{"off":24,"type":"r","reg":"rdi"},{"off":26,"type":"r","reg":"rdi"},{"off":30,"type":"r","reg":"rdi"}]}]}
0x1220={"name":"sym.wtime","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":40,"ninstr":20,"bp_frame":true,"bbs":[4640,4726,4731],"vars":[{"name":"var_10h","type":"int64_t","stack":-16,"accs":[{"off":22,"type":"w","sp":24,"reg":"rsp"},{"off":70,"type":"r","sp":24,"reg":"rsp"}]}]}
0x1280={"name":"dbg.vec_sum_v2","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":39,"bp_frame":true,"bbs":[4736,4750,4776,4796,4802,4806,4832,4843,4848],"vars":[{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":4,"type":"r","reg":"rdi"},{"off":14,"type":"r","reg":"rdi"}]},{"name":"arg2","type":"uintmax_t","reg":"rsi","accs":[{"off":7,"type":"r","reg":"rsi"},{"off":9,"type":"r","reg":"rsi"},{"off":17,"type":"r","reg":"rsi"}]}]}
0x1300={"name":"dbg.vec_sum_v3","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":46,"bp_frame":true,"bbs":[4864,4879,4912,4932,4944,4949,4976,4987,4992],"vars":[{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":4,"type":"r","reg":"rdi"},{"off":19,"type":"r","reg":"rdi"},{"off":36,"type":"r","reg":"rdi"}]},{"name":"arg2","type":"uintmax_t","reg":"rsi","accs":[{"off":7,"type":"r","reg":"rsi"},{"off":10,"type":"r","reg":"rsi"},{"off":15,"type":"r","reg":"rsi"}]}]}
0x1390={"name":"dbg.run","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":72,"ninstr":60,"noreturn":true,"bbs":[4240,5008,5064,5079,5245,5262],"vars":[{"name":"var_20h","type":"int64_t","stack":-32,"accs":[{"off":30,"type":"w","sp":40,"reg":"rsp"},{"off":221,"type":"r","sp":40,"reg":"rsp"}]},{"name":"ts","type":"struct timespec","stack":-56,"accs":[{"off":71,"type":"r","sp":16,"reg":"rsp"}]},{"name":"var_40h","type":"int64_t","stack":-64,"accs":[{"off":131,"type":"w","sp":8,"reg":"rsp"}]},{"name":"arg1","type":"int64_t","reg":"rdi","accs":[{"off":8,"type":"r","reg":"rdi"}]}]}
0x1494={"name":"sym._fini","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":4,"bp_frame":true,"bbs":[5268]}

/core/analysis/hints

/core/analysis/imports

/core/analysis/meta
0x1000=[{"type":"C","str":"[11] -r-x section size 27 named .init"}]
0x1020=[{"type":"C","str":"[12] -r-x section size 96 named .plt"}]
0x1080=[{"type":"C","str":"[13] -r-x section size 16 named .plt.got"}]
0x1090=[{"type":"C","str":"[14] -r-x section size 80 named .plt.sec"}]
0x10e0=[{"type":"C","subtype":56,"str":"int main();"}]
0x10e8=[{"type":"t","subtype":56,"str":"int64_t arg1"}]
0x1106=[{"type":"t","subtype":56,"str":"void *rtld_fini"}]
0x1109=[{"type":"t","subtype":56,"str":"int argc"}]
0x110a=[{"type":"t","subtype":56,"str":"char **ubp_av"}]
0x1113=[{"type":"t","subtype":56,"str":"void *fini"}]
0x1116=[{"type":"t","subtype":56,"str":"void *init"}]
0x1118=[{"type":"t","subtype":56,"str":"void *main"}]
0x11f0=[{"type":"C","subtype":56,"str":"int vec_sum(int * vec,int n);"}]
0x11f4=[{"type":"t","subtype":56,"str":"arg2"}]
0x11f8=[{"type":"t","subtype":56,"str":"arg2"}]
0x11fb=[{"type":"t","subtype":56,"str":"arg1"}]
0x1208=[{"type":"t","subtype":56,"str":"arg1"}]
0x120a=[{"type":"t","subtype":56,"str":"arg1"}]
0x120e=[{"type":"t","subtype":56,"str":"arg1"}]
0x1280=[{"type":"C","subtype":56,"str":"int vec_sum_v2(int * vec,int n);"}]
0x1284=[{"type":"t","subtype":56,"str":"arg1"}]
0x1287=[{"type":"t","subtype":56,"str":"arg2"}]
0x1289=[{"type":"t","subtype":56,"str":"arg2"}]
0x128e=[{"type":"t","subtype":56,"str":"arg1"}]
0x1291=[{"type":"t","subtype":56,"str":"arg2"}]
0x1300=[{"type":"C","subtype":56,"str":"int vec_sum_v3(int * vec,int n);"}]
0x1304=[{"type":"t","subtype":56,"str":"arg1"}]
0x1307=[{"type":"t","subtype":56,"str":"arg2"}]
0x130a=[{"type":"t","subtype":56,"str":"arg2"}]
0x130f=[{"type":"t","subtype":56,"str":"arg2"}]
0x1313=[{"type":"t","subtype":56,"str":"arg1"}]
0x1324=[{"type":"t","subtype":56,"str":"arg1"}]
0x1390=[{"type":"C","subtype":56,"str":"void run(void (*)() fn);"}]
0x1398=[{"type":"t","subtype":56,"str":"arg1"}]
0x139b=[{"type":"t","subtype":56,"str":"size_t size"}]
0x1494=[{"type":"C","str":"[16] -r-x section size 13 named .fini"}]
0x2000=[{"type":"C","str":"[17] -r-- section size 40 named .rodata"}]
0x2004=[{"size":21,"type":"s","subtype":98,"str":"Time: %.6f, sum: %d\\n"}]
0x2028=[{"type":"C","str":"[18] -r-- section size 92 named .eh_frame_hdr"}]
0x2088=[{"type":"C","str":"[19] -r-- section size 304 named .eh_frame"}]
0x318=[{"type":"C","str":"[00] -r-- section size 28 named .interp"}]
0x338=[{"type":"C","str":"[01] -r-- section size 48 named .note.gnu.property"}]
0x368=[{"type":"C","str":"[02] -r-- section size 36 named .note.gnu.build-id"}]
0x38c=[{"type":"C","str":"[03] -r-- section size 32 named .note.ABI-tag"}]
0x3b0=[{"type":"C","str":"[04] -r-- section size 36 named .gnu.hash"}]
0x3d8=[{"type":"C","str":"[05] -r-- section size 264 named .dynsym"}]
0x3d98=[{"size":8,"type":"d"},{"type":"C","str":"[20] -rw- section size 8 named .init_array"}]
0x3da0=[{"size":8,"type":"d"},{"type":"C","str":"[21] -rw- section size 8 named .fini_array"}]
0x3da8=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[22] -rw- section size 496 named .dynamic"}]
0x3db0=[{"size":8,"type":"d","str":"8"}]
0x3db8=[{"size":8,"type":"d","str":"8"}]
0x3dc0=[{"size":8,"type":"d","str":"8"}]
0x3dc8=[{"size":8,"type":"d","str":"8"}]
0x3dd0=[{"size":8,"type":"d","str":"8"}]
0x3dd8=[{"size":8,"type":"d","str":"8"}]
0x3de0=[{"size":8,"type":"d","str":"8"}]
0x3de8=[{"size":8,"type":"d","str":"8"}]
0x3df0=[{"size":8,"type":"d","str":"8"}]
0x3df8=[{"size":8,"type":"d","str":"8"}]
0x3e00=[{"size":8,"type":"d","str":"8"}]
0x3e08=[{"size":8,"type":"d","str":"8"}]
0x3e10=[{"size":8,"type":"d","str":"8"}]
0x3e18=[{"size":8,"type":"d","str":"8"}]
0x3e20=[{"size":8,"type":"d","str":"8"}]
0x3e28=[{"size":8,"type":"d","str":"8"}]
0x3e30=[{"size":8,"type":"d","str":"8"}]
0x3e38=[{"size":8,"type":"d","str":"8"}]
0x3e40=[{"size":8,"type":"d","str":"8"}]
0x3e48=[{"size":8,"type":"d","str":"8"}]
0x3e50=[{"size":8,"type":"d","str":"8"}]
0x3e58=[{"size":8,"type":"d","str":"8"}]
0x3e60=[{"size":8,"type":"d","str":"8"}]
0x3e68=[{"size":8,"type":"d","str":"8"}]
0x3e70=[{"size":8,"type":"d","str":"8"}]
0x3e78=[{"size":8,"type":"d","str":"8"}]
0x3e80=[{"size":8,"type":"d","str":"8"}]
0x3e88=[{"size":8,"type":"d","str":"8"}]
0x3e90=[{"size":8,"type":"d","str":"8"}]
0x3e98=[{"size":8,"type":"d","str":"8"}]
0x3ea0=[{"size":8,"type":"d","str":"8"}]
0x3ea8=[{"size":8,"type":"d","str":"8"}]
0x3eb0=[{"size":8,"type":"d","str":"8"}]
0x3eb8=[{"size":8,"type":"d","str":"8"}]
0x3ec0=[{"size":8,"type":"d","str":"8"}]
0x3ec8=[{"size":8,"type":"d","str":"8"}]
0x3ed0=[{"size":8,"type":"d","str":"8"}]
0x3ed8=[{"size":8,"type":"d","str":"8"}]
0x3ee0=[{"size":8,"type":"d","str":"8"}]
0x3ee8=[{"size":8,"type":"d","str":"8"}]
0x3ef0=[{"size":8,"type":"d","str":"8"}]
0x3ef8=[{"size":8,"type":"d","str":"8"}]
0x3f00=[{"size":8,"type":"d","str":"8"}]
0x3f08=[{"size":8,"type":"d","str":"8"}]
0x3f10=[{"size":8,"type":"d","str":"8"}]
0x3f18=[{"size":8,"type":"d","str":"8"}]
0x3f20=[{"size":8,"type":"d","str":"8"}]
0x3f28=[{"size":8,"type":"d","str":"8"}]
0x3f30=[{"size":8,"type":"d","str":"8"}]
0x3f38=[{"size":8,"type":"d","str":"8"}]
0x3f40=[{"size":8,"type":"d","str":"8"}]
0x3f48=[{"size":8,"type":"d","str":"8"}]
0x3f50=[{"size":8,"type":"d","str":"8"}]
0x3f58=[{"size":8,"type":"d","str":"8"}]
0x3f60=[{"size":8,"type":"d","str":"8"}]
0x3f68=[{"size":8,"type":"d","str":"8"}]
0x3f70=[{"size":8,"type":"d","str":"8"}]
0x3f78=[{"size":8,"type":"d","str":"8"}]
0x3f80=[{"size":8,"type":"d","str":"8"}]
0x3f88=[{"size":8,"type":"d","str":"8"}]
0x3f90=[{"size":8,"type":"d","str":"8"}]
0x3f98=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[23] -rw- section size 104 named .got"}]
0x3fa0=[{"size":8,"type":"d","str":"8"}]
0x3fa8=[{"size":8,"type":"d","str":"8"}]
0x3fb0=[{"size":8,"type":"d"}]
0x3fb8=[{"size":8,"type":"d"}]
0x3fc0=[{"size":8,"type":"d"}]
0x3fc8=[{"size":8,"type":"d"}]
0x3fd0=[{"size":8,"type":"d"}]
0x3fd8=[{"size":8,"type":"d"}]
0x3fe0=[{"size":8,"type":"d"}]
0x3fe8=[{"size":8,"type":"d"}]
0x3ff0=[{"size":8,"type":"d"}]
0x3ff8=[{"size":8,"type":"d"}]
0x4000=[{"type":"C","str":"[24] -rw- section size 16 named .data"}]
0x4008=[{"size":8,"type":"d"}]
0x4010=[{"type":"C","str":"[25] -rw- section size 8 named .bss"}]
0x4020=[{"size":8,"type":"d"}]
0x4028=[{"size":8,"type":"d"}]
0x4030=[{"size":8,"type":"d"}]
0x4038=[{"size":8,"type":"d"}]
0x4040=[{"size":8,"type":"d"}]
0x4048=[{"size":8,"type":"d"}]
0x4050=[{"size":8,"type":"d"}]
0x4058=[{"size":8,"type":"d"}]
0x4060=[{"size":8,"type":"d"}]
0x4068=[{"size":8,"type":"d"}]
0x4e0=[{"type":"C","str":"[06] -r-- section size 225 named .dynstr"}]
0x5c2=[{"type":"C","str":"[07] -r-- section size 22 named .gnu.version"}]
0x5d8=[{"type":"C","str":"[08] -r-- section size 96 named .gnu.version_r"}]
0x638=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[09] -r-- section size 192 named .rela.dyn"}]
0x640=[{"size":8,"type":"d","str":"8"}]
0x648=[{"size":8,"type":"d","str":"8"}]
0x650=[{"size":8,"type":"d","str":"8"}]
0x658=[{"size":8,"type":"d","str":"8"}]
0x660=[{"size":8,"type":"d","str":"8"}]
0x668=[{"size":8,"type":"d","str":"8"}]
0x670=[{"size":8,"type":"d","str":"8"}]
0x678=[{"size":8,"type":"d","str":"8"}]
0x680=[{"size":8,"type":"d","str":"8"}]
0x688=[{"size":8,"type":"d","str":"8"}]
0x690=[{"size":8,"type":"d","str":"8"}]
0x698=[{"size":8,"type":"d","str":"8"}]
0x6a0=[{"size":8,"type":"d","str":"8"}]
0x6a8=[{"size":8,"type":"d","str":"8"}]
0x6b0=[{"size":8,"type":"d","str":"8"}]
0x6b8=[{"size":8,"type":"d","str":"8"}]
0x6c0=[{"size":8,"type":"d","str":"8"}]
0x6c8=[{"size":8,"type":"d","str":"8"}]
0x6d0=[{"size":8,"type":"d","str":"8"}]
0x6d8=[{"size":8,"type":"d","str":"8"}]
0x6e0=[{"size":8,"type":"d","str":"8"}]
0x6e8=[{"size":8,"type":"d","str":"8"}]
0x6f0=[{"size":8,"type":"d","str":"8"}]
0x6f8=[{"size":8,"type":"d","str":"8"},{"type":"C","str":"[10] -r-- section size 120 named .rela.plt"}]
0x700=[{"size":8,"type":"d","str":"8"}]
0x708=[{"size":8,"type":"d","str":"8"}]
0x710=[{"size":8,"type":"d","str":"8"}]
0x718=[{"size":8,"type":"d","str":"8"}]
0x720=[{"size":8,"type":"d","str":"8"}]
0x728=[{"size":8,"type":"d","str":"8"}]
0x730=[{"size":8,"type":"d","str":"8"}]
0x738=[{"size":8,"type":"d","str":"8"}]
0x740=[{"size":8,"type":"d","str":"8"}]
0x748=[{"size":8,"type":"d","str":"8"}]
0x750=[{"size":8,"type":"d","str":"8"}]
0x758=[{"size":8,"type":"d","str":"8"}]
0x760=[{"size":8,"type":"d","str":"8"}]
0x768=[{"size":8,"type":"d","str":"8"}]

/core/analysis/meta/spaces
name=CS
spacestack=["*"]

/core/analysis/meta/spaces/spaces
bin=s

/core/analysis/noreturn
addr.1390.noreturn=true

/core/analysis/typelinks

/core/analysis/types
FILE=typedef
__clockid_t=typedef
__div_t=struct
__idtype=enum
__imaxdiv_t=struct
__ldiv_t=struct
__lldiv_t=struct
__siginfo_t=struct
__sigset_t=struct
__syscall_slong_t=typedef
__time_t=typedef
_fd_set=struct
access_perm=enum
bool=type
char=type
char *=type
char16_t=type
char32_t=type
char8_t=type
clock_t=typedef
clockid_t=typedef
div_t=typedef
double=type
enum.__idtype=P_ALL,P_GID,P_PGID
enum.__idtype.0x0=P_ALL
enum.__idtype.0x1=P_GID
enum.__idtype.0x2=P_PGID
enum.__idtype.P_ALL=0x0
enum.__idtype.P_GID=0x1
enum.__idtype.P_PGID=0x2
enum.access_perm=F_OK,X_OK,W_OK,R_OK,WX_OK,RX_OK,RW_OK,RWX_OK
enum.access_perm.0x0=F_OK
enum.access_perm.0x1=X_OK
enum.access_perm.0x2=W_OK
enum.access_perm.0x3=WX_OK
enum.access_perm.0x4=R_OK
enum.access_perm.0x5=RX_OK
enum.access_perm.0x6=RW_OK
enum.access_perm.0x7=RWX_OK
enum.access_perm.F_OK=0x0
enum.access_perm.RWX_OK=0x7
enum.access_perm.RW_OK=0x6
enum.access_perm.RX_OK=0x5
enum.access_perm.R_OK=0x4
enum.access_perm.WX_OK=0x3
enum.access_perm.W_OK=0x2
enum.access_perm.X_OK=0x1
enum.sock_domain=AF_UNIX,AF_INET,AF_AX25,AF_IPX,AF_APPLETALK,AF_X25,AF_INET6,AF_DECnet,AF_KEY,AF_NETLINK,AF_PACKET,AF_RDS,AF_PPPOX,AF_LLC,AF_IB,AF_MPLS,AF_CAN,AF_TIPC,AF_BLUETOOTH,AF_ALG,AF_VSOCK,AF_KCM,AF_XDP
enum.sock_domain.0x1=AF_UNIX
enum.sock_domain.0x10=AF_INET6
enum.sock_domain.0x12=AF_DECnet
enum.sock_domain.0x15=AF_KEY
enum.sock_domain.0x16=AF_NETLINK
enum.sock_domain.0x17=AF_PACKET
enum.sock_domain.0x2=AF_INET
enum.sock_domain.0x21=AF_RDS
enum.sock_domain.0x24=AF_PPPOX
enum.sock_domain.0x26=AF_LLC
enum.sock_domain.0x27=AF_IB
enum.sock_domain.0x28=AF_MPLS
enum.sock_domain.0x29=AF_CAN
enum.sock_domain.0x3=AF_AX25
enum.sock_domain.0x30=AF_TIPC
enum.sock_domain.0x31=AF_BLUETOOTH
enum.sock_domain.0x38=AF_ALG
enum.sock_domain.0x4=AF_IPX
enum.sock_domain.0x40=AF_VSOCK
enum.sock_domain.0x41=AF_KCM
enum.sock_domain.0x44=AF_XDP
enum.sock_domain.0x5=AF_APPLETALK
enum.sock_domain.0x9=AF_X25
enum.sock_domain.AF_ALG=0x38
enum.sock_domain.AF_APPLETALK=0x5
enum.sock_domain.AF_AX25=0x3
enum.sock_domain.AF_BLUETOOTH=0x31
enum.sock_domain.AF_CAN=0x29
enum.sock_domain.AF_DECnet=0x12
enum.sock_domain.AF_IB=0x27
enum.sock_domain.AF_INET=0x2
enum.sock_domain.AF_INET6=0x10
enum.sock_domain.AF_IPX=0x4
enum.sock_domain.AF_KCM=0x41
enum.sock_domain.AF_KEY=0x15
enum.sock_domain.AF_LLC=0x26
enum.sock_domain.AF_MPLS=0x28
enum.sock_domain.AF_NETLINK=0x16
enum.sock_domain.AF_PACKET=0x17
enum.sock_domain.AF_PPPOX=0x24
enum.sock_domain.AF_RDS=0x21
enum.sock_domain.AF_TIPC=0x30
enum.sock_domain.AF_UNIX=0x1
enum.sock_domain.AF_VSOCK=0x40
enum.sock_domain.AF_X25=0x9
enum.sock_domain.AF_XDP=0x44
enum.sock_type=SOCK_STREAM,SOCK_DGRAM,SOCK_SEQPACKET,SOCK_RAW,SOCK_RDM,SOCK_PACKET,SOCK_DCCP
enum.sock_type.0x1=SOCK_DGRAM
enum.sock_type.0x2=SOCK_STREAM
enum.sock_type.0x3=SOCK_RAW
enum.sock_type.0x4=SOCK_RDM
enum.sock_type.0x5=SOCK_SEQPACKET
enum.sock_type.0x6=SOCK_DCCP
enum.sock_type.0x7=SOCK_PACKET
enum.sock_type.SOCK_DCCP=0x6
enum.sock_type.SOCK_DGRAM=0x1
enum.sock_type.SOCK_PACKET=0x7
enum.sock_type.SOCK_RAW=0x3
enum.sock_type.SOCK_RDM=0x4
enum.sock_type.SOCK_SEQPACKET=0x5
enum.sock_type.SOCK_STREAM=0x2
enum.type_0xf1=N
enum.type_0xf1.0x5f5e100=N
enum.type_0xf1.N=0x5f5e100
fd_mask=typedef
fd_set=typedef
fenv_t=typedef
fexcept_t=typedef
float=type
fpos_t=typedef
gid_t=type
id_t=type
idtype_t=typedef
imaxdiv_t=typedef
int=type
int16_t=type
int32_t=type
int64_t=type
int8_t=type
intmax_t=type
intptr_t=type
jmp_buf=typedef
lconv=struct
ldiv_t=typedef
lldiv_t=typedef
locale_t=typedef
long=type
long double=type
long int=type
long long=type
long long int=type
long long unsigned int=type
long unsigned int=type
mbstate_t=typedef
nl_item=typedef
pid_t=type
ptrdiff_t=type
short=type
short int=type
short unsigned int=type
sigaction=struct
siginfo_t=typedef
signed char=type
sigset_t=typedef
sigval=union
size_t=type
sock_domain=enum
sock_type=enum
sockaddr=struct
socklen_t=typedef
ssize_t=type
std__type_info=struct
struct.__div_t=quot,rem
struct.__div_t.quot=int,0,0
struct.__div_t.rem=int,2,0
struct.__imaxdiv_t=quot,rem
struct.__imaxdiv_t.quot=intmax_t,0,0
struct.__imaxdiv_t.rem=intmax_t,8,0
struct.__ldiv_t=quot,rem
struct.__ldiv_t.quot=long int,0,0
struct.__ldiv_t.rem=long int,4,0
struct.__lldiv_t=quot,rem
struct.__lldiv_t.quot=long long int,0,0
struct.__lldiv_t.rem=long long int,4,0
struct.__siginfo_t=si_signo,si_code,si_value,si_errno,si_pid,si_uid,si_addr,si_status,si_band
struct.__siginfo_t.si_addr=void *,28,0
struct.__siginfo_t.si_band=int,36,0
struct.__siginfo_t.si_code=int,4,0
struct.__siginfo_t.si_errno=int,16,0
struct.__siginfo_t.si_pid=pid_t,20,0
struct.__siginfo_t.si_signo=int,0,0
struct.__siginfo_t.si_status=int,32,0
struct.__siginfo_t.si_uid=uid_t,24,0
struct.__siginfo_t.si_value=union sigval,8,0
struct.__sigset_t=sig
struct.__sigset_t.sig=unsigned long,0,0
struct._fd_set=fds_bits
struct._fd_set.fds_bits=fd_mask,0,0
struct.sigaction=sa_handler,sa_flags,sa_restorer,sa_mask
struct.sigaction.sa_flags=unsigned long,8,0
struct.sigaction.sa_handler=void *,0,0
struct.sigaction.sa_mask=sigset_t,20,0
struct.sigaction.sa_restorer=void *,12,0
struct.timespec=tv_sec,tv_nsec
struct.timespec.tv_nsec=long,8,0
struct.timespec.tv_sec=time_t,0,0
struct.timeval=tv_sec,tv_usec
struct.timeval.tv_sec=time_t,0,0
struct.timeval.tv_usec=suseconds_t,8,0
struct.tm=tm_sec,tm_min,tm_hour,tm_mday,tm_mon,tm_year,tm_wday,tm_yday,tm_isdst
struct.tm.tm_hour=int,8,0
struct.tm.tm_isdst=int,32,0
struct.tm.tm_mday=int,12,0
struct.tm.tm_min=int,4,0
struct.tm.tm_mon=int,16,0
struct.tm.tm_sec=int,0,0
struct.tm.tm_wday=int,24,0
struct.tm.tm_yday=int,28,0
struct.tm.tm_year=int,20,0
suseconds_t=typedef
time_t=typedef
timespec=struct
timeval=struct
tm=struct
type.bool=b
type.bool.size=8
type.bool.typeclass=None
type.char=c
type.char *=z
type.char *.size=64
type.char *.typeclass=None
type.char.size=8
type.char.typeclass=Signed Integral
type.char16_t=c
type.char16_t.size=16
type.char16_t.typeclass=Signed Integral
type.char32_t=c
type.char32_t.size=32
type.char32_t.typeclass=Signed Integral
type.char8_t=c
type.char8_t.size=8
type.char8_t.typeclass=Signed Integral
type.double=F
type.double.size=64
type.double.typeclass=Floating
type.float=f
type.float.size=32
type.float.typeclass=Floating
type.gid_t=q
type.gid_t.size=64
type.gid_t.typeclass=Integral
type.id_t=q
type.id_t.size=64
type.id_t.typeclass=Integral
type.int=d
type.int.size=32
type.int.typeclass=Signed Integral
type.int16_t=w
type.int16_t.size=16
type.int16_t.typeclass=Signed Integral
type.int32_t=d
type.int32_t.size=32
type.int32_t.typeclass=Signed Integral
type.int64_t=q
type.int64_t.size=64
type.int64_t.typeclass=Signed Integral
type.int8_t=b
type.int8_t.size=8
type.int8_t.typeclass=Signed Integral
type.intmax_t=q
type.intmax_t.size=64
type.intmax_t.typeclass=Signed Integral
type.intptr_t=q
type.intptr_t.size=64
type.intptr_t.typeclass=Signed Integral
type.long=x
type.long double=F
type.long double.size=64
type.long double.typeclass=Floating
type.long int=x
type.long int.size=64
type.long int.typeclass=Signed Integral
type.long long=q
type.long long int=q
type.long long int.size=64
type.long long int.typeclass=Signed Integral
type.long long unsigned int.size=64
type.long long unsigned int.typeclass=None
type.long long.size=64
type.long long.typeclass=Signed Integral
type.long unsigned int.size=64
type.long unsigned int.typeclass=None
type.long.size=64
type.long.typeclass=Signed Integral
type.pid_t=q
type.pid_t.size=64
type.pid_t.typeclass=Integral
type.ptrdiff_t=q
type.ptrdiff_t.size=64
type.ptrdiff_t.typeclass=Integral
type.short=w
type.short int.size=16
type.short int.typeclass=None
type.short unsigned int.size=16
type.short unsigned int.typeclass=None
type.short.size=16
type.short.typeclass=Signed Integral
type.signed char.size=8
type.signed char.typeclass=None
type.size_t=q
type.size_t.size=64
type.size_t.typeclass=Unsigned Integral
type.ssize_t=q
type.ssize_t.size=64
type.ssize_t.typeclass=Signed Integral
type.uid_t=q
type.uid_t.size=64
type.uid_t.typeclass=Integral
type.uint16_t=w
type.uint16_t.size=16
type.uint16_t.typeclass=Unsigned Integral
type.uint32_t=d
type.uint32_t.size=32
type.uint32_t.typeclass=Unsigned Integral
type.uint64_t=q
type.uint64_t.size=64
type.uint64_t.typeclass=Unsigned Integral
type.uint8_t=b
type.uint8_t.size=8
type.uint8_t.typeclass=Unsigned Integral
type.uintmax_t=q
type.uintmax_t.size=64
type.uintmax_t.typeclass=Unsigned Integral
type.uintptr_t=q
type.uintptr_t.size=64
type.uintptr_t.typeclass=Unsigned Integral
type.unknown_t=q
type.unknown_t.size=64
type.unknown_t.typeclass=Integral
type.unsigned char=b
type.unsigned char.size=8
type.unsigned char.typeclass=Unsigned Integral
type.unsigned int=i
type.unsigned int.size=32
type.unsigned int.typeclass=Unsigned Integral
type.unsigned long=d
type.unsigned long long=q
type.unsigned long long.size=64
type.unsigned long long.typeclass=Unsigned Integral
type.unsigned long.size=32
type.unsigned long.typeclass=Unsigned Integral
type.unsigned short=w
type.unsigned short.size=16
type.unsigned short.typeclass=Unsigned Integral
type.void *=p
type.void *.size=64
type.void *.typeclass=None
type.void.size=0
type.void.typeclass=None
type_0xf1=enum
typedef.FILE=void
typedef.__clockid_t=int
typedef.__syscall_slong_t=long int
typedef.__time_t=long int
typedef.clock_t=void
typedef.clockid_t=__clockid_t
typedef.div_t=struct __div_t
typedef.fd_mask=long int
typedef.fd_set=struct _fd_set
typedef.fenv_t=void
typedef.fexcept_t=void
typedef.fpos_t=void
typedef.idtype_t=enum __idtype
typedef.imaxdiv_t=struct __imaxdiv_t
typedef.jmp_buf=void
typedef.ldiv_t=struct __ldiv_t
typedef.lldiv_t=struct __lldiv_t
typedef.locale_t=void
typedef.mbstate_t=void
typedef.nl_item=int
typedef.siginfo_t=struct __siginfo_t
typedef.sigset_t=struct __sigset_t
typedef.socklen_t=int
typedef.suseconds_t=long
typedef.time_t=long
typedef.va_list=char *
typedef.wchar_t=int
typedef.wctrans_t=unsigned int
typedef.wctype_t=int
typedef.wint_t=int
uid_t=type
uint16_t=type
uint32_t=type
uint64_t=type
uint8_t=type
uintmax_t=type
uintptr_t=type
union.sigval=sival_int,sival_ptr
union.sigval.sival_int=int,0,0
union.sigval.sival_ptr=void *,0,0
unknown_t=type
unsigned char=type
unsigned int=type
unsigned long=type
unsigned long long=type
unsigned short=type
va_list=typedef
void=type
void *=type
wchar_t=typedef
wctrans_t=typedef
wctype_t=typedef
wint_t=typedef

/core/analysis/vars

/core/analysis/xrefs
0x1008=[{"to":16360,"type":"d"}]
0x1026=[{"to":16296,"type":"c"}]
0x1039=[{"to":4128,"type":"c"}]
0x1044=[{"to":1,"type":"d"}]
0x1049=[{"to":4128,"type":"c"}]
0x1054=[{"to":2,"type":"d"}]
0x1059=[{"to":4128,"type":"c"}]
0x1064=[{"to":3,"type":"d"}]
0x1069=[{"to":4128,"type":"c"}]
0x1074=[{"to":4,"type":"d"}]
0x1079=[{"to":4128,"type":"c"}]
0x1084=[{"to":16376,"type":"c"}]
0x1094=[{"to":16304,"type":"c"}]
0x10a4=[{"to":16312,"type":"c"}]
0x10b4=[{"to":16320,"type":"c"}]
0x10c4=[{"to":16328,"type":"c"}]
0x10d4=[{"to":16336,"type":"c"}]
0x10e8=[{"to":4592,"type":"d"}]
0x10ef=[{"to":5008,"type":"C"}]
0x1118=[{"to":4320,"type":"d"}]
0x111f=[{"to":16344,"type":"C"}]
0x1130=[{"to":16400,"type":"d"}]
0x1137=[{"to":16400,"type":"d"}]
0x1143=[{"to":16352,"type":"d"}]
0x1160=[{"to":16400,"type":"d"}]
0x1167=[{"to":16400,"type":"d"}]
0x1184=[{"to":16368,"type":"d"}]
0x11a4=[{"to":16400,"type":"d"}]
0x11ae=[{"to":16376,"type":"d"}]
0x11bb=[{"to":16392,"type":"d"}]
0x11c2=[{"to":4224,"type":"C"}]
0x11c7=[{"to":4400,"type":"C"}]
0x11cc=[{"to":16400,"type":"d"}]
0x11e4=[{"to":4448,"type":"c"}]
0x1240=[{"to":4256,"type":"C"}]
0x127b=[{"to":4272,"type":"C"}]
0x1289=[{"to":3,"type":"d"}]
0x12aa=[{"to":16,"type":"d"}]
0x12f4=[{"to":4802,"type":"c"}]
0x130a=[{"to":3,"type":"d"}]
0x1335=[{"to":16,"type":"d"}]
0x1387=[{"to":4944,"type":"c"}]
0x13b5=[{"to":4288,"type":"C"}]
0x13e4=[{"to":4256,"type":"C"}]
0x1427=[{"to":4256,"type":"C"}]
0x1457=[{"to":8196,"type":"d"}]
0x1468=[{"to":4304,"type":"C"}]
0x1489=[{"to":4240,"type":"c"}]
0x148e=[{"to":4272,"type":"C"}]
0x20d3=[{"to":63,"type":"d"}]
0x20da=[{"to":34,"type":"d"}]
0x21a4=[{"to":239,"type":"d"}]

/core/config
analysis.apply.signature=true
analysis.arch=x86
analysis.armthumb=false
analysis.autoname=false
analysis.bb.maxsize=512K
analysis.brokenrefs=false
analysis.calls=false
analysis.cpp.abi=itanium
analysis.cpu=x86
analysis.datarefs=false
analysis.delay=true
analysis.depth=64
analysis.detectwrites=false
analysis.esil=false
analysis.fcnprefix=fcn
analysis.from=0xffffffffffffffff
analysis.gp=0
analysis.gpfixed=true
analysis.graph_depth=256
analysis.hasnext=false
analysis.hpskip=false
analysis.ignbithints=false
analysis.in=io.maps.x
analysis.jmp.above=true
analysis.jmp.after=true
analysis.jmp.cref=false
analysis.jmp.indir=false
analysis.jmp.mid=true
analysis.jmp.ref=true
analysis.jmp.retpoline=true
analysis.jmp.tailcall=0
analysis.jmp.tbl=true
analysis.jmp.tblmax=512
analysis.jmp.tblmaxoffset=0x00001000
analysis.limits=false
analysis.loads=false
analysis.nonull=0
analysis.nopskip=true
analysis.norevisit=false
analysis.ptrdepth=3
analysis.pushret=false
analysis.recont=false
analysis.refstr=false
analysis.resolve.pointers=true
analysis.rnr=false
analysis.roregs=gp,zero
analysis.sleep=0
analysis.strings=false
analysis.timeout=0
analysis.to=0xffffffffffffffff
analysis.trap.after=false
analysis.trycatch=false
analysis.types.constraint=false
analysis.types.spec=gcc
analysis.types.verbose=false
analysis.vars=true
analysis.vinfun=true
analysis.vinfunrange=false
asm.analysis=false
asm.arch=x86
asm.bb.line=false
asm.bb.middle=true
asm.bits=64
asm.bytes=false
asm.bytes.right=false
asm.bytes.space=false
asm.calls=true
asm.capitalize=false
asm.cmt.col=35
asm.cmt.esil=false
asm.cmt.flgrefs=true
asm.cmt.il=false
asm.cmt.off=nodup
asm.cmt.patch=false
asm.cmt.refs=false
asm.cmt.right=true
asm.comments=true
asm.cpu=x86
asm.cycles=false
asm.cyclespace=false
asm.decode=false
asm.decoff=false
asm.demangle=true
asm.describe=false
asm.dwarf=true
asm.dwarf.abspath=false
asm.dwarf.file=true
asm.emu=false
asm.esil=false
asm.family=false
asm.fcn.signature=true
asm.fcn.size=false
asm.flags=true
asm.flags.inbytes=false
asm.flags.inline=false
asm.flags.limit=0
asm.flags.maxname=0
asm.flags.middle=2
asm.flags.offset=false
asm.flags.real=1
asm.functions=true
asm.hint.call=true
asm.hint.call.indirect=true
asm.hint.cdiv=false
asm.hint.emu=false
asm.hint.jmp=false
asm.hint.lea=false
asm.hint.pos=1
asm.hints=true
asm.imm.hash=0
asm.imm.str=true
asm.imm.trim=false
asm.indent=false
asm.indentspace=2
asm.instr=true
asm.invhex=false
asm.lbytes=true
asm.lines=true
asm.lines.bb=true
asm.lines.call=false
asm.lines.fcn=true
asm.lines.maxref=0
asm.lines.out=true
asm.lines.ret=false
asm.lines.right=false
asm.lines.wide=false
asm.lines.width=7
asm.marks=false
asm.meta=true
asm.midcursor=false
asm.middle=false
asm.minicols=false
asm.nbytes=10
asm.nodup=false
asm.noisy=true
asm.offset=true
asm.optype=false
asm.os=linux
asm.parser=x86.pseudo
asm.payloads=false
asm.pcalign=0
asm.pseudo=0
asm.refptr=false
asm.reloff=false
asm.reloff.flags=false
asm.section=false
asm.section.col=30
asm.section.name=true
asm.section.perm=false
asm.seggrn=4
asm.segoff=false
asm.size=false
asm.slow=true
asm.stackptr=false
asm.sub.jmp=true
asm.sub.names=true
asm.sub.reg=false
asm.sub.rel=true
asm.sub.section=false
asm.sub.tail=false
asm.sub.var=true
asm.sub.varmin=256
asm.sub.varonly=true
asm.symbol=false
asm.symbol.col=40
asm.syntax=intel
asm.tabs=8
asm.tabs.off=5
asm.tabs.once=true
asm.trace=false
asm.tracespace=false
asm.types=1
asm.ucase=false
asm.usercomments=false
asm.var=true
asm.var.access=false
asm.var.summary=0
asm.xrefs=false
asm.xrefs.code=true
asm.xrefs.fold=5
asm.xrefs.max=20
basefind.alignment=0x00001000
basefind.max.threads=0
basefind.min.score=1
basefind.min.string=10
basefind.progress=false
basefind.search.end=0xf0000000
basefind.search.start=0
bin.at=false
bin.b64str=false
bin.baddr=0
bin.classes=true
bin.dbginfo=true
bin.debase64=false
bin.demangle=true
bin.demangle.libs=false
bin.filter=true
bin.hashlimit=10M
bin.laddr=0
bin.lang=c
bin.libs=false
bin.maxstr=0
bin.maxstrbuf=0x00a00000
bin.minstr=0
bin.relocs=true
bin.str.enc=guess
bin.strings=true
bin.usextr=true
bin.verbose=false
cfg.bigendian=false
cfg.cpuaffinity=0
cfg.debug=false
cfg.editor=vi
cfg.fortunes=true
cfg.fortunes.clippy=false
cfg.fortunes.file=tips
cfg.newtab=false
cfg.plugins=true
cfg.prefixdump=dump
cfg.seek.histsize=63
cfg.seek.silent=false
cfg.user=pid123577
cfg.wseek=false
cmd.depth=10
cmd.hitinfo=1
cmd.repeat=false
dbg.aftersyscall=true
dbg.backend=native
dbg.bep=loader
dbg.bpinmaps=true
dbg.bpsysign=false
dbg.btalgo=fuzzy
dbg.btdepth=128
dbg.clone=false
dbg.consbreak=false
dbg.create_new_console=true
dbg.execs=false
dbg.exitkills=true
dbg.follow=64
dbg.follow.child=false
dbg.forks=false
dbg.funcarg=false
dbg.gdb.page_size=0x00001000
dbg.gdb.retries=10
dbg.glibc.fastbinmax=10
dbg.glibc.fc_offset=640
dbg.glibc.ma_offset=0
dbg.glibc.tcache=true
dbg.hwbp=0
dbg.malloc=glibc
dbg.rebase=true
dbg.skipover=false
dbg.slow=false
dbg.status=false
dbg.swstep=false
dbg.threads=false
dbg.trace=0
dbg.trace.inrange=false
dbg.trace.libs=true
dbg.trace.tag=0
dbg.trace_continue=1
dbg.verbose=false
diff.bare=false
diff.from=0
diff.sort=addr
diff.to=0
dir.depth=10
dir.home=/root
dir.magic=/tmp/.mount_CutterMdcgY5/usr/share/rizin/magic
dir.plugins=/tmp/.mount_CutterMdcgY5/usr/lib/rizin/plugins
dir.prefix=/tmp/.mount_CutterMdcgY5/usr
dir.projects=/root/.local/share/rizin/projects
dir.types=/usr/include
elf.checks.sections=true
elf.checks.segments=true
elf.load.sections=true
emu.lazy=false
emu.pre=false
emu.skip=ds
emu.ssa=false
emu.stack=false
emu.str=0
emu.str.flag=true
emu.str.inv=true
emu.str.lea=true
emu.str.off=false
emu.write=false
esil.addr.size=64
esil.breakoninvalid=true
esil.exectrap=false
esil.gotolimit=0x00001000
esil.iotrap=true
esil.nonull=false
esil.prestep=true
esil.romem=false
esil.stack.addr=0x00100000
esil.stack.depth=256
esil.stack.pattern=0
esil.stack.size=0x000f0000
esil.stats=false
esil.timeout=0
esil.verbose=0
file.info=true
file.lastpath=/home/cicada44/cicada-main/sibsutis/4sem/PCT/lab-01/pct-spring-lab1/pipeline-loop-unrolling/prog
file.loadalign=0x00000400
file.openmany=1
file.path=/home/cicada44/cicada-main/sibsutis/4sem/PCT/lab-01/pct-spring-lab1/pipeline-loop-unrolling/prog
file.type=elf
flirt.ignore.unknown=true
flirt.node.optimize=2
flirt.sig.deflate=false
flirt.sig.file=all
flirt.sig.library=Built with rizin 0.5.1
flirt.sig.os=all
flirt.sig.version=10
flirt.sigdb.load.home=true
flirt.sigdb.load.system=true
ghidra.cmt.cpp=true
ghidra.cmt.indent=4
ghidra.indent=4
ghidra.linelen=120
ghidra.maximplref=2
ghidra.nl.brace=false
ghidra.nl.else=false
ghidra.rawptr=true
ghidra.ropropagate=true
ghidra.sleighhome=/tmp/.mount_CutterMdcgY5/usr/lib/rizin/plugins/rz_ghidra_sleigh
ghidra.verbose=true
graph.aeab=false
graph.body=true
graph.bytes=false
graph.cmtright=false
graph.comments=true
graph.dotted=false
graph.dummy=true
graph.edges=2
graph.few=false
graph.font=Courier
graph.from=0xffffffffffffffff
graph.gv.current=false
graph.gv.format=gif
graph.hints=true
graph.invscroll=false
graph.json.usenames=true
graph.layout=0
graph.linemode=1
graph.nodejmps=true
graph.ntitles=true
graph.offset=false
graph.refs=false
graph.scroll=5
graph.to=0xffffffffffffffff
graph.trace=false
hex.align=false
hex.ascii=true
hex.bytes=true
hex.cols=16
hex.comments=true
hex.compact=false
hex.depth=5
hex.flagsz=0
hex.hdroff=false
hex.header=true
hex.offset=true
hex.onechar=false
hex.pairs=0
hex.section=false
hex.stride=0
hex.style=false
http.auth=false
http.bind=localhost
http.browser=xdg-open
http.colon=false
http.cors=false
http.dirlist=false
http.homeroot=/root/.local/share/rizin/www
http.index=index.html
http.log=true
http.maxsize=0
http.port=9090
http.root=/tmp/.mount_CutterMdcgY5/usr/share/rizin/www
http.stop.after=0
http.timeout=3
http.upget=false
http.upload=false
http.uproot=/tmp
http.verbose=false
io.0xff=255
io.aslr=false
io.autofd=true
io.cache=0
io.cache.auto=false
io.cache.read=false
io.cache.write=false
io.exec=true
io.ff=true
io.pava=false
io.pcache=false
io.pcache.read=false
io.pcache.write=false
io.unalloc=false
io.unalloc.ch=.
io.va=1
jsdec.asm=false
jsdec.blocks=false
jsdec.casts=false
jsdec.debug=false
jsdec.highlight=default
jsdec.paddr=false
jsdec.slow=false
jsdec.xrefs=false
log.colors=false
log.events=false
log.level=5
log.srcinfo=false
log.traplevel=6
magic.depth=100
pdb.autoload=0
pdb.extract=1
pdb.server=https://msdl.microsoft.com/download/symbols
pdb.symstore=/root/.local/share/rizin/pdb
prj.compress=false
prj.file=/home/cicada44/cicada-main/sibsutis/4sem/PCT/lab-01/pct-spring-lab1/pipeline-loop-unrolling/unopt.rzdb
rap.loop=true
rop.comments=false
rop.conditional=false
rop.db=true
rop.len=5
rop.sdb=false
rop.subchains=false
rzil.step.events.read=false
rzil.step.events.write=true
scr.bgfill=false
scr.breaklines=false
scr.color=0
scr.color.args=true
scr.color.bytes=true
scr.color.grep=false
scr.color.ops=true
scr.color.pipe=false
scr.columns=0
scr.confirmquit=false
scr.dumpcols=false
scr.echo=false
scr.feedback=1
scr.fgets=false
scr.fix.columns=0
scr.fix.rows=0
scr.flush=false
scr.gadgets=true
scr.highlight.grep=false
scr.hist.block=true
scr.histsave=true
scr.html=0
scr.interactive=0
scr.last=true
scr.linesleep=0
scr.maxtab=0x00001000
scr.nkey=flag
scr.null=false
scr.pagesize=1
scr.panelborder=false
scr.prompt=true
scr.prompt.file=false
scr.prompt.flag=false
scr.prompt.flag.only=false
scr.prompt.mode=false
scr.prompt.popup=false
scr.prompt.sect=false
scr.prompt.vi=false
scr.rainbow=false
scr.randpal=false
scr.responsive=false
scr.rows=0
scr.scrollbar=0
scr.slow=true
scr.square=true
scr.strconv=asciiesc
scr.utf8=true
scr.utf8.curvy=false
scr.visual.mode=0
scr.wheel=true
scr.wheel.nkey=false
scr.wheel.speed=4
scr.wideoff=false
search.align=0
search.case_sensitive=smart
search.chunk=0
search.contiguous=true
search.distance=0
search.esilcombo=8
search.flags=false
search.from=0xffffffffffffffff
search.in=io.maps
search.kwidx=0
search.maxhits=0
search.overlap=false
search.prefix=hit
search.show=true
search.to=0xffffffffffffffff
stack.anotated=false
stack.bytes=true
stack.delta=0
stack.reg=SP
stack.size=64
str.escbslash=false
str.search.check_ascii_freq=true
tcp.islocal=false
time.fmt=%Y-%m-%d %H:%M:%S %z
time.zone=0
zoom.byte=h
zoom.from=0
zoom.in=io.map
zoom.maxsz=512
zoom.to=0

/core/debug

/core/debug/breakpoints

/core/file
absolute=/home/cicada44/cicada-main/sibsutis/4sem/PCT/lab-01/pct-spring-lab1/pipeline-loop-unrolling/prog
raw=/home/cicada44/cicada-main/sibsutis/4sem/PCT/lab-01/pct-spring-lab1/pipeline-loop-unrolling/prog
relative=prog

/core/flags
base=0
realnames=1

/core/flags/flags
dbg.main={"realname":"dbg.main","demangled":false,"offset":4320,"size":20,"space":"functions"}
dbg.run={"realname":"dbg.run","demangled":false,"offset":5008,"size":259,"space":"functions"}
dbg.vec_sum={"realname":"dbg.vec_sum","demangled":false,"offset":4592,"size":43,"space":"functions"}
dbg.vec_sum_v2={"realname":"dbg.vec_sum_v2","demangled":false,"offset":4736,"size":118,"space":"functions"}
dbg.vec_sum_v3={"realname":"dbg.vec_sum_v3","demangled":false,"offset":4864,"size":137,"space":"functions"}
entry.fini0={"realname":"entry.fini0","demangled":false,"offset":4512,"size":1,"space":"symbols"}
entry.init0={"realname":"entry.init0","demangled":false,"offset":4576,"size":9,"space":"symbols"}
entry0={"realname":"entry0","demangled":false,"offset":4352,"size":37,"space":"symbols"}
fcn.00001080={"realname":"fcn.00001080","demangled":false,"offset":4224,"size":11,"space":"functions"}
loc.__GNU_EH_FRAME_HDR={"realname":"__GNU_EH_FRAME_HDR","demangled":false,"offset":8232,"size":0,"space":"symbols"}
loc.__bss_start={"realname":"__bss_start","demangled":false,"offset":16400,"size":0,"space":"symbols"}
loc.__data_start={"realname":"__data_start","demangled":false,"offset":16384,"size":0,"space":"symbols"}
loc._edata={"realname":"_edata","demangled":false,"offset":16400,"size":0,"space":"symbols"}
loc._end={"realname":"_end","demangled":false,"offset":16408,"size":0,"space":"symbols"}
loc.data_start={"realname":"data_start","demangled":false,"offset":16384,"size":0,"space":"symbols"}
main={"realname":"main","demangled":false,"offset":4320,"size":27,"space":"symbols"}
obj._DYNAMIC={"realname":"_DYNAMIC","demangled":false,"offset":15784,"size":0,"space":"symbols"}
obj._GLOBAL_OFFSET_TABLE={"realname":"_GLOBAL_OFFSET_TABLE_","demangled":false,"offset":16280,"size":0,"space":"symbols"}
obj._IO_stdin_used={"realname":"_IO_stdin_used","demangled":false,"offset":8192,"size":4,"space":"symbols"}
obj.__FRAME_END={"realname":"__FRAME_END__","demangled":false,"offset":8628,"size":0,"space":"symbols"}
obj.__TMC_END={"realname":"__TMC_END__","demangled":false,"offset":16400,"size":0,"space":"symbols"}
obj.__abi_tag={"realname":"__abi_tag","demangled":false,"offset":908,"size":32,"space":"symbols"}
obj.__do_global_dtors_aux_fini_array_entry={"realname":"__do_global_dtors_aux_fini_array_entry","demangled":false,"offset":15776,"size":0,"space":"symbols"}
obj.__dso_handle={"realname":"__dso_handle","demangled":false,"offset":16392,"size":0,"space":"symbols"}
obj.__frame_dummy_init_array_entry={"realname":"__frame_dummy_init_array_entry","demangled":false,"offset":15768,"size":0,"space":"symbols"}
obj.completed.0={"realname":"completed.0","demangled":false,"offset":16400,"size":1,"space":"symbols"}
reloc._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":16352,"size":8,"space":"relocs"}
reloc._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":16368,"size":8,"space":"relocs"}
reloc.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":16376,"size":8,"space":"relocs"}
reloc.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":16360,"size":8,"space":"relocs"}
reloc.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":16344,"size":8,"space":"relocs"}
reloc.__printf_chk={"realname":"__printf_chk","demangled":false,"offset":16336,"size":8,"space":"relocs"}
reloc.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":16320,"size":8,"space":"relocs"}
reloc.clock_gettime={"realname":"clock_gettime","demangled":false,"offset":16312,"size":8,"space":"relocs"}
reloc.free={"realname":"free","demangled":false,"offset":16304,"size":8,"space":"relocs"}
reloc.malloc={"realname":"malloc","demangled":false,"offset":16328,"size":8,"space":"relocs"}
reloc.target._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":16464,"size":8,"space":"relocs"}
reloc.target._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":16480,"size":8,"space":"relocs"}
reloc.target.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":16488,"size":8,"space":"relocs"}
reloc.target.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":16472,"size":8,"space":"relocs"}
reloc.target.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":16456,"size":8,"space":"relocs"}
reloc.target.__printf_chk={"realname":"__printf_chk","demangled":false,"offset":16448,"size":8,"space":"relocs"}
reloc.target.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":16432,"size":8,"space":"relocs"}
reloc.target.clock_gettime={"realname":"clock_gettime","demangled":false,"offset":16424,"size":8,"space":"relocs"}
reloc.target.free={"realname":"free","demangled":false,"offset":16416,"size":8,"space":"relocs"}
reloc.target.malloc={"realname":"malloc","demangled":false,"offset":16440,"size":8,"space":"relocs"}
section..bss={"realname":"section..bss","demangled":false,"offset":16400,"size":8,"space":"sections"}
section..data={"realname":"section..data","demangled":false,"offset":16384,"size":16,"space":"sections"}
section..dynamic={"realname":"section..dynamic","demangled":false,"offset":15784,"size":496,"space":"sections"}
section..dynstr={"realname":"section..dynstr","demangled":false,"offset":1248,"size":225,"space":"sections"}
section..dynsym={"realname":"section..dynsym","demangled":false,"offset":984,"size":264,"space":"sections"}
section..eh_frame={"realname":"section..eh_frame","demangled":false,"offset":8328,"size":304,"space":"sections"}
section..eh_frame_hdr={"realname":"section..eh_frame_hdr","demangled":false,"offset":8232,"size":92,"space":"sections"}
section..fini={"realname":"section..fini","demangled":false,"offset":5268,"size":13,"space":"sections"}
section..fini_array={"realname":"section..fini_array","demangled":false,"offset":15776,"size":8,"space":"sections"}
section..gnu.hash={"realname":"section..gnu.hash","demangled":false,"offset":944,"size":36,"space":"sections"}
section..gnu.version={"realname":"section..gnu.version","demangled":false,"offset":1474,"size":22,"space":"sections"}
section..gnu.version_r={"realname":"section..gnu.version_r","demangled":false,"offset":1496,"size":96,"space":"sections"}
section..got={"realname":"section..got","demangled":false,"offset":16280,"size":104,"space":"sections"}
section..init={"realname":"section..init","demangled":false,"offset":4096,"size":27,"space":"sections"}
section..init_array={"realname":"section..init_array","demangled":false,"offset":15768,"size":8,"space":"sections"}
section..interp={"realname":"section..interp","demangled":false,"offset":792,"size":28,"space":"sections"}
section..note.ABI_tag={"realname":"section..note.ABI_tag","demangled":false,"offset":908,"size":32,"space":"sections"}
section..note.gnu.build_id={"realname":"section..note.gnu.build_id","demangled":false,"offset":872,"size":36,"space":"sections"}
section..note.gnu.property={"realname":"section..note.gnu.property","demangled":false,"offset":824,"size":48,"space":"sections"}
section..plt={"realname":"section..plt","demangled":false,"offset":4128,"size":96,"space":"sections"}
section..plt.got={"realname":"section..plt.got","demangled":false,"offset":4224,"size":16,"space":"sections"}
section..plt.sec={"realname":"section..plt.sec","demangled":false,"offset":4240,"size":80,"space":"sections"}
section..rela.dyn={"realname":"section..rela.dyn","demangled":false,"offset":1592,"size":192,"space":"sections"}
section..rela.plt={"realname":"section..rela.plt","demangled":false,"offset":1784,"size":120,"space":"sections"}
section..rodata={"realname":"section..rodata","demangled":false,"offset":8192,"size":40,"space":"sections"}
section..text={"realname":"section..text","demangled":false,"offset":4320,"size":947,"space":"sections"}
segment.DYNAMIC={"realname":"segment.DYNAMIC","demangled":false,"offset":15784,"size":496,"space":"segments"}
segment.GNU_EH_FRAME={"realname":"segment.GNU_EH_FRAME","demangled":false,"offset":8232,"size":92,"space":"segments"}
segment.GNU_RELRO={"realname":"segment.GNU_RELRO","demangled":false,"offset":15768,"size":616,"space":"segments"}
segment.GNU_STACK={"realname":"segment.GNU_STACK","demangled":false,"offset":0,"size":0,"space":"segments"}
segment.INTERP={"realname":"segment.INTERP","demangled":false,"offset":792,"size":28,"space":"segments"}
segment.LOAD0={"realname":"segment.LOAD0","demangled":false,"offset":0,"size":1904,"space":"segments"}
segment.LOAD1={"realname":"segment.LOAD1","demangled":false,"offset":4096,"size":1185,"space":"segments"}
segment.LOAD2={"realname":"segment.LOAD2","demangled":false,"offset":8192,"size":440,"space":"segments"}
segment.LOAD3={"realname":"segment.LOAD3","demangled":false,"offset":15768,"size":640,"space":"segments"}
segment.NOTE={"realname":"segment.NOTE","demangled":false,"offset":824,"size":48,"space":"segments"}
segment.NOTE_1={"realname":"segment.NOTE_1","demangled":false,"offset":872,"size":68,"space":"segments"}
segment.PHDR={"realname":"segment.PHDR","demangled":false,"offset":64,"size":728,"space":"segments"}
segment.UNKNOWN={"realname":"segment.UNKNOWN","demangled":false,"offset":824,"size":48,"space":"segments"}
segment.ehdr={"realname":"segment.ehdr","demangled":false,"offset":0,"size":64,"space":"segments"}
str.Time:__.6f__sum:__d={"realname":"str.Time:__.6f__sum:__d","demangled":false,"offset":8196,"size":21,"space":"strings"}
sym.__do_global_dtors_aux={"realname":"__do_global_dtors_aux","demangled":false,"offset":4512,"size":57,"space":"symbols"}
sym._fini={"realname":"_fini","demangled":false,"offset":5268,"size":13,"space":"symbols"}
sym._init={"realname":"_init","demangled":false,"offset":4096,"size":27,"space":"symbols"}
sym._start={"realname":"_start","demangled":false,"offset":4352,"size":38,"space":"symbols"}
sym.deregister_tm_clones={"realname":"deregister_tm_clones","demangled":false,"offset":4400,"size":41,"space":"symbols"}
sym.frame_dummy={"realname":"frame_dummy","demangled":false,"offset":4576,"size":0,"space":"symbols"}
sym.imp.__printf_chk={"realname":"__printf_chk","demangled":false,"offset":4304,"size":11,"space":"imports"}
sym.imp.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":4272,"size":11,"space":"imports"}
sym.imp.clock_gettime={"realname":"clock_gettime","demangled":false,"offset":4256,"size":11,"space":"imports"}
sym.imp.free={"realname":"free","demangled":false,"offset":4240,"size":16,"space":"imports"}
sym.imp.malloc={"realname":"malloc","demangled":false,"offset":4288,"size":11,"space":"imports"}
sym.main={"realname":"main","demangled":false,"offset":4320,"size":27,"space":"symbols"}
sym.register_tm_clones={"realname":"register_tm_clones","demangled":false,"offset":4448,"size":57,"space":"symbols"}
sym.run={"realname":"run","demangled":false,"offset":5008,"size":259,"space":"symbols"}
sym.vec_sum={"realname":"vec_sum","demangled":false,"offset":4592,"size":43,"space":"symbols"}
sym.vec_sum_v2={"realname":"vec_sum_v2","demangled":false,"offset":4736,"size":118,"space":"symbols"}
sym.vec_sum_v3={"realname":"vec_sum_v3","demangled":false,"offset":4864,"size":137,"space":"symbols"}
sym.wtime={"realname":"wtime","demangled":false,"offset":4640,"size":96,"space":"symbols"}

/core/flags/spaces
name=fs
spacestack=["*"]

/core/flags/spaces/spaces
classes=s
flirt=s
functions=s
imports=s
platform.ports=s
registers=s
registers.extended=s
registers.mmio=s
relocs=s
search=s
sections=s
segments=s
strings=s
symbols=s

/core/flags/tags
tag.alloc=malloc free$ calloc kalloc realloc
tag.dylib=dlopen dlsym dlclose mmap LoadLibrary GetProcAddress
tag.env=getenv putenv unsetenv setenv GetEnvironmentVariable SetEnvironmentVariable ExpandEnvironmentStrings
tag.fs=open$ close read$ write CloseHandle FindFirstFileW _wfopen _wstat ftruncate lseek _chsize GetFullPathName realpath RemoveDirectory DeleteFile CreateFile WriteFile UnmapViewOfFile CreateFileMapping MapViewOfFile readlink chmod fchmod chown stat fstat lstat fstatat lstat64 stat64 chflags fchflags lchflags
tag.network=socket connect bind$ listen accept sendto recvfrom gethostbyname htons ntohs
tag.process=getpid getppid kill exit abort assert gethostid sethostid sysctl
tag.stdout=^printf puts write
tag.string=strcat strcpy strncpy strlen strtok strstr strlcpy asprintf sprintf snprintf
tag.threads=pthread_create pthread_mutex_init pthread_cond_init CreateThread TerminateThread WaitForSingleObject GetCurrentThreadId
tag.time=settimeofday gettimeofday time adjtime ctime timed date$ sleep Sleep usleep clock_nanosleep localtime asctime difftime gmtime mktime timelocal timegm tzfile tzset

/core/flags/zones
