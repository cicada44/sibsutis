#ifndef PARSER_H
#define PARSER_H

/* Token types */
enum TokenType {
    TOKEN_CLASS = 1,
    TOKEN_FALSE,
    TOKEN_TRUE,
    TOKEN_ELSE,
    TOKEN_FI,
    TOKEN_IF,
    TOKEN_IN,
    TOKEN_INHERITS,
    TOKEN_ISVOID,
    TOKEN_LET,
    TOKEN_LOOP,
    TOKEN_POOL,
    TOKEN_THEN,
    TOKEN_WHILE,
    TOKEN_CASE,
    TOKEN_ESAC,
    TOKEN_NEW,
    TOKEN_OF,
    TOKEN_NOT,

    TOKEN_DOT,
    TOKEN_AT,
    TOKEN_TILDA,
    TOKEN_MUL,
    TOKEN_DIV,
    TOKEN_PLUS,
    TOKEN_MINUS,
    TOKEN_LE,
    TOKEN_ME,
    TOKEN_LESS,
    TOKEN_EQ,
    TOKEN_ARROW,

    TOKEN_IDENTIFIER_OBJECT,
    TOKEN_IDENTIFIER_TYPE,
    TOKEN_IDENTIFIER_OTHER,
    TOKEN_INTCONST,

    TOKEN_SQUARE_PARENTESES_LEFT,
    TOKEN_SQUARE_PARENTESES_RIGHT,
    TOKEN_CURVE_PARENTESES_LEFT, 
    TOKEN_CURVE_PARENTESES_RIGHT,
    TOKEN_ROUND_PARENTESES_LEFT, 
    TOKEN_ROUND_PARENTESES_RIGHT,

    TOKEN_SEMICOLON,
    TOKEN_COLON,

    TOKEN_STRING
};

#endif
